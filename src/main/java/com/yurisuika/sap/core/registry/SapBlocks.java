package com.yurisuika.sap.core.registry;

import com.minecraftabnormals.abnormals_core.core.util.registry.BlockSubRegistryHelper;
import com.yurisuika.sap.common.block.*;
import com.yurisuika.sap.common.world.gen.feature.trees.*;
import com.yurisuika.sap.core.Sap;
import com.yurisuika.sap.core.other.SapProperties;
import com.mojang.datafixers.util.Pair;
import com.minecraftabnormals.abnormals_core.common.blocks.sign.AbnormalsStandingSignBlock;
import com.minecraftabnormals.abnormals_core.common.blocks.sign.AbnormalsWallSignBlock;
import com.minecraftabnormals.abnormals_core.common.blocks.wood.AbnormalsSaplingBlock;

import net.minecraft.block.*;
import net.minecraft.block.material.MaterialColor;
import net.minecraft.item.ItemGroup;
import net.minecraftforge.fml.RegistryObject;
import net.minecraftforge.fml.common.Mod;

@SuppressWarnings("deprecation")
@Mod.EventBusSubscriber(modid = "sap", bus = Mod.EventBusSubscriber.Bus.MOD)
public class SapBlocks {
	public static final BlockSubRegistryHelper HELPER = Sap.REGISTRY_HELPER.getBlockSubHelper();

	public static final RegistryObject<Block> STRIPPED_ALDER_LOG 		= HELPER.createBlock("stripped_alder_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ALDER_WOOD 		= HELPER.createBlock("stripped_alder_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ALDER_LOG					= HELPER.createBlock("alder_log", () -> new SapLogBlock(STRIPPED_ALDER_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ALDER_WOOD 				= HELPER.createBlock("alder_wood", () -> new SapWoodBlock(STRIPPED_ALDER_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ALDER_PLANKS 				= HELPER.createBlock("alder_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ALDER_SLAB 				= HELPER.createBlock("alder_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ALDER_STAIRS 				= HELPER.createBlock("alder_stairs", () -> new SapWoodStairsBlock(ALDER_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ALDER_FENCE 				= HELPER.createBlock("alder_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> ALDER_FENCE_GATE 			= HELPER.createBlock("alder_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ALDER_PRESSURE_PLATE 		= HELPER.createBlock("alder_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ALDER_DOOR 				= HELPER.createBlock("alder_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ALDER_TRAPDOOR 			= HELPER.createBlock("alder_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ALDER_SAPLING 			= HELPER.createBlock("alder_sapling", () -> new AbnormalsSaplingBlock(new AlderTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_ALDER_SAPLING 		= HELPER.createBlockNoItem("potted_alder_sapling", () -> new FlowerPotBlock(SapBlocks.ALDER_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> ALDER_BUTTON 				= HELPER.createBlock("alder_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ALDER_LEAVES 				= HELPER.createBlock("alder_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> ALDER_SIGNS = HELPER.createSignBlock("alder", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_ALMOND_LOG 		= HELPER.createBlock("stripped_almond_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ALMOND_WOOD 		= HELPER.createBlock("stripped_almond_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ALMOND_LOG				= HELPER.createBlock("almond_log", () -> new SapLogBlock(STRIPPED_ALMOND_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ALMOND_WOOD 				= HELPER.createBlock("almond_wood", () -> new SapWoodBlock(STRIPPED_ALMOND_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ALMOND_PLANKS 			= HELPER.createBlock("almond_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ALMOND_SLAB 				= HELPER.createBlock("almond_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ALMOND_STAIRS 			= HELPER.createBlock("almond_stairs", () -> new SapWoodStairsBlock(ALMOND_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ALMOND_FENCE 				= HELPER.createBlock("almond_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> ALMOND_FENCE_GATE 		= HELPER.createBlock("almond_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ALMOND_PRESSURE_PLATE 	= HELPER.createBlock("almond_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ALMOND_DOOR 				= HELPER.createBlock("almond_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ALMOND_TRAPDOOR 			= HELPER.createBlock("almond_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ALMOND_SAPLING 			= HELPER.createBlock("almond_sapling", () -> new AbnormalsSaplingBlock(new AlmondTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_ALMOND_SAPLING 	= HELPER.createBlockNoItem("potted_almond_sapling", () -> new FlowerPotBlock(SapBlocks.ALMOND_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> ALMOND_BUTTON 			= HELPER.createBlock("almond_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ALMOND_LEAVES 			= HELPER.createBlock("almond_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> ALMOND_SIGNS = HELPER.createSignBlock("almond", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_APPLE_LOG 		= HELPER.createBlock("stripped_apple_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_APPLE_WOOD 		= HELPER.createBlock("stripped_apple_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> APPLE_LOG					= HELPER.createBlock("apple_log", () -> new SapLogBlock(STRIPPED_APPLE_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> APPLE_WOOD 				= HELPER.createBlock("apple_wood", () -> new SapWoodBlock(STRIPPED_APPLE_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> APPLE_PLANKS 				= HELPER.createBlock("apple_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> APPLE_SLAB 				= HELPER.createBlock("apple_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> APPLE_STAIRS 				= HELPER.createBlock("apple_stairs", () -> new SapWoodStairsBlock(APPLE_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> APPLE_FENCE 				= HELPER.createBlock("apple_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> APPLE_FENCE_GATE 			= HELPER.createBlock("apple_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> APPLE_PRESSURE_PLATE 		= HELPER.createBlock("apple_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> APPLE_DOOR 				= HELPER.createBlock("apple_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> APPLE_TRAPDOOR 			= HELPER.createBlock("apple_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> APPLE_SAPLING 			= HELPER.createBlock("apple_sapling", () -> new AbnormalsSaplingBlock(new AppleTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_APPLE_SAPLING 		= HELPER.createBlockNoItem("potted_apple_sapling", () -> new FlowerPotBlock(SapBlocks.APPLE_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> APPLE_BUTTON 				= HELPER.createBlock("apple_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> APPLE_LEAVES 				= HELPER.createBlock("apple_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> APPLE_SIGNS = HELPER.createSignBlock("apple", MaterialColor.WOOD);


	public static final RegistryObject<Block> STRIPPED_APRICOT_LOG 		= HELPER.createBlock("stripped_apricot_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_APRICOT_WOOD 	= HELPER.createBlock("stripped_apricot_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> APRICOT_LOG				= HELPER.createBlock("apricot_log", () -> new SapLogBlock(STRIPPED_APRICOT_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> APRICOT_WOOD 				= HELPER.createBlock("apricot_wood", () -> new SapWoodBlock(STRIPPED_APRICOT_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> APRICOT_PLANKS 			= HELPER.createBlock("apricot_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> APRICOT_SLAB 				= HELPER.createBlock("apricot_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> APRICOT_STAIRS 			= HELPER.createBlock("apricot_stairs", () -> new SapWoodStairsBlock(APRICOT_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> APRICOT_FENCE 			= HELPER.createBlock("apricot_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> APRICOT_FENCE_GATE 		= HELPER.createBlock("apricot_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> APRICOT_PRESSURE_PLATE 	= HELPER.createBlock("apricot_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> APRICOT_DOOR 				= HELPER.createBlock("apricot_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> APRICOT_TRAPDOOR 			= HELPER.createBlock("apricot_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> APRICOT_SAPLING 			= HELPER.createBlock("apricot_sapling", () -> new AbnormalsSaplingBlock(new ApricotTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_APRICOT_SAPLING 	= HELPER.createBlockNoItem("potted_apricot_sapling", () -> new FlowerPotBlock(SapBlocks.APRICOT_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> APRICOT_BUTTON 			= HELPER.createBlock("apricot_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> APRICOT_LEAVES 			= HELPER.createBlock("apricot_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> APRICOT_SIGNS = HELPER.createSignBlock("apricot", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_ASH_LOG 			= HELPER.createBlock("stripped_ash_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ASH_WOOD 		= HELPER.createBlock("stripped_ash_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ASH_LOG					= HELPER.createBlock("ash_log", () -> new SapLogBlock(STRIPPED_ASH_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ASH_WOOD 					= HELPER.createBlock("ash_wood", () -> new SapWoodBlock(STRIPPED_ASH_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ASH_PLANKS 				= HELPER.createBlock("ash_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ASH_SLAB 					= HELPER.createBlock("ash_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ASH_STAIRS 				= HELPER.createBlock("ash_stairs", () -> new SapWoodStairsBlock(ASH_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ASH_FENCE 				= HELPER.createBlock("ash_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> ASH_FENCE_GATE 			= HELPER.createBlock("ash_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ASH_PRESSURE_PLATE 		= HELPER.createBlock("ash_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ASH_DOOR 					= HELPER.createBlock("ash_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ASH_TRAPDOOR 				= HELPER.createBlock("ash_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ASH_SAPLING 				= HELPER.createBlock("ash_sapling", () -> new AbnormalsSaplingBlock(new AshTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_ASH_SAPLING 		= HELPER.createBlockNoItem("potted_ash_sapling", () -> new FlowerPotBlock(SapBlocks.ASH_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> ASH_BUTTON 				= HELPER.createBlock("ash_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ASH_LEAVES 				= HELPER.createBlock("ash_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> ASH_SIGNS = HELPER.createSignBlock("ash", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_ASPEN_LOG 		= HELPER.createBlock("stripped_aspen_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ASPEN_WOOD 		= HELPER.createBlock("stripped_aspen_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ASPEN_LOG					= HELPER.createBlock("aspen_log", () -> new SapLogBlock(STRIPPED_ASPEN_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ASPEN_WOOD 				= HELPER.createBlock("aspen_wood", () -> new SapWoodBlock(STRIPPED_ASPEN_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ASPEN_PLANKS 				= HELPER.createBlock("aspen_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ASPEN_SLAB 				= HELPER.createBlock("aspen_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ASPEN_STAIRS 				= HELPER.createBlock("aspen_stairs", () -> new SapWoodStairsBlock(ASPEN_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ASPEN_FENCE 				= HELPER.createBlock("aspen_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> ASPEN_FENCE_GATE 			= HELPER.createBlock("aspen_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ASPEN_PRESSURE_PLATE 		= HELPER.createBlock("aspen_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ASPEN_DOOR 				= HELPER.createBlock("aspen_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ASPEN_TRAPDOOR 			= HELPER.createBlock("aspen_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ASPEN_SAPLING 			= HELPER.createBlock("aspen_sapling", () -> new AbnormalsSaplingBlock(new AspenTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_ASPEN_SAPLING 		= HELPER.createBlockNoItem("potted_aspen_sapling", () -> new FlowerPotBlock(SapBlocks.ASPEN_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> ASPEN_BUTTON 				= HELPER.createBlock("aspen_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ASPEN_LEAVES 				= HELPER.createBlock("aspen_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> ASPEN_SIGNS = HELPER.createSignBlock("aspen", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_AVOCADO_LOG 		= HELPER.createBlock("stripped_avocado_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_AVOCADO_WOOD 	= HELPER.createBlock("stripped_avocado_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> AVOCADO_LOG				= HELPER.createBlock("avocado_log", () -> new SapLogBlock(STRIPPED_AVOCADO_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> AVOCADO_WOOD 				= HELPER.createBlock("avocado_wood", () -> new SapWoodBlock(STRIPPED_AVOCADO_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> AVOCADO_PLANKS 			= HELPER.createBlock("avocado_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> AVOCADO_SLAB 				= HELPER.createBlock("avocado_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> AVOCADO_STAIRS 			= HELPER.createBlock("avocado_stairs", () -> new SapWoodStairsBlock(AVOCADO_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> AVOCADO_FENCE 			= HELPER.createBlock("avocado_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> AVOCADO_FENCE_GATE 		= HELPER.createBlock("avocado_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> AVOCADO_PRESSURE_PLATE 	= HELPER.createBlock("avocado_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> AVOCADO_DOOR 				= HELPER.createBlock("avocado_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> AVOCADO_TRAPDOOR 			= HELPER.createBlock("avocado_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> AVOCADO_SAPLING 			= HELPER.createBlock("avocado_sapling", () -> new AbnormalsSaplingBlock(new AvocadoTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_AVOCADO_SAPLING 	= HELPER.createBlockNoItem("potted_avocado_sapling", () -> new FlowerPotBlock(SapBlocks.AVOCADO_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> AVOCADO_BUTTON 			= HELPER.createBlock("avocado_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> AVOCADO_LEAVES 			= HELPER.createBlock("avocado_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> AVOCADO_SIGNS = HELPER.createSignBlock("avocado", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_BALSA_LOG 		= HELPER.createBlock("stripped_balsa_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_BALSA_WOOD 		= HELPER.createBlock("stripped_balsa_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BALSA_LOG					= HELPER.createBlock("balsa_log", () -> new SapLogBlock(STRIPPED_BALSA_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BALSA_WOOD 				= HELPER.createBlock("balsa_wood", () -> new SapWoodBlock(STRIPPED_BALSA_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BALSA_PLANKS 				= HELPER.createBlock("balsa_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BALSA_SLAB 				= HELPER.createBlock("balsa_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BALSA_STAIRS 				= HELPER.createBlock("balsa_stairs", () -> new SapWoodStairsBlock(BALSA_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BALSA_FENCE 				= HELPER.createBlock("balsa_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> BALSA_FENCE_GATE 			= HELPER.createBlock("balsa_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BALSA_PRESSURE_PLATE 		= HELPER.createBlock("balsa_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BALSA_DOOR 				= HELPER.createBlock("balsa_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BALSA_TRAPDOOR 			= HELPER.createBlock("balsa_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BALSA_SAPLING 			= HELPER.createBlock("balsa_sapling", () -> new AbnormalsSaplingBlock(new BalsaTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_BALSA_SAPLING 		= HELPER.createBlockNoItem("potted_balsa_sapling", () -> new FlowerPotBlock(SapBlocks.BALSA_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> BALSA_BUTTON 				= HELPER.createBlock("balsa_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BALSA_LEAVES 				= HELPER.createBlock("balsa_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> BALSA_SIGNS = HELPER.createSignBlock("balsa", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_BAY_LOG 			= HELPER.createBlock("stripped_bay_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_BAY_WOOD 		= HELPER.createBlock("stripped_bay_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BAY_LOG					= HELPER.createBlock("bay_log", () -> new SapLogBlock(STRIPPED_BAY_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BAY_WOOD 					= HELPER.createBlock("bay_wood", () -> new SapWoodBlock(STRIPPED_BAY_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BAY_PLANKS 				= HELPER.createBlock("bay_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BAY_SLAB 					= HELPER.createBlock("bay_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BAY_STAIRS 				= HELPER.createBlock("bay_stairs", () -> new SapWoodStairsBlock(BAY_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BAY_FENCE 				= HELPER.createBlock("bay_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> BAY_FENCE_GATE 			= HELPER.createBlock("bay_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BAY_PRESSURE_PLATE 		= HELPER.createBlock("bay_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BAY_DOOR 					= HELPER.createBlock("bay_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BAY_TRAPDOOR 				= HELPER.createBlock("bay_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BAY_SAPLING 				= HELPER.createBlock("bay_sapling", () -> new AbnormalsSaplingBlock(new BayTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_BAY_SAPLING 		= HELPER.createBlockNoItem("potted_bay_sapling", () -> new FlowerPotBlock(SapBlocks.BAY_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> BAY_BUTTON 				= HELPER.createBlock("bay_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BAY_LEAVES 				= HELPER.createBlock("bay_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> BAY_SIGNS = HELPER.createSignBlock("bay", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_BEECH_LOG 		= HELPER.createBlock("stripped_beech_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_BEECH_WOOD 		= HELPER.createBlock("stripped_beech_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BEECH_LOG					= HELPER.createBlock("beech_log", () -> new SapLogBlock(STRIPPED_BEECH_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BEECH_WOOD 				= HELPER.createBlock("beech_wood", () -> new SapWoodBlock(STRIPPED_BEECH_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BEECH_PLANKS 				= HELPER.createBlock("beech_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BEECH_SLAB 				= HELPER.createBlock("beech_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BEECH_STAIRS 				= HELPER.createBlock("beech_stairs", () -> new SapWoodStairsBlock(BEECH_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BEECH_FENCE 				= HELPER.createBlock("beech_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> BEECH_FENCE_GATE 			= HELPER.createBlock("beech_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BEECH_PRESSURE_PLATE 		= HELPER.createBlock("beech_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BEECH_DOOR 				= HELPER.createBlock("beech_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BEECH_TRAPDOOR 			= HELPER.createBlock("beech_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BEECH_SAPLING 			= HELPER.createBlock("beech_sapling", () -> new AbnormalsSaplingBlock(new BeechTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_BEECH_SAPLING 		= HELPER.createBlockNoItem("potted_beech_sapling", () -> new FlowerPotBlock(SapBlocks.BEECH_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> BEECH_BUTTON 				= HELPER.createBlock("beech_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BEECH_LEAVES 				= HELPER.createBlock("beech_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> BEECH_SIGNS = HELPER.createSignBlock("beech", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_BLACKWOOD_LOG 	= HELPER.createBlock("stripped_blackwood_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_BLACKWOOD_WOOD 	= HELPER.createBlock("stripped_blackwood_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BLACKWOOD_LOG				= HELPER.createBlock("blackwood_log", () -> new SapLogBlock(STRIPPED_BLACKWOOD_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BLACKWOOD_WOOD 			= HELPER.createBlock("blackwood_wood", () -> new SapWoodBlock(STRIPPED_BLACKWOOD_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BLACKWOOD_PLANKS 			= HELPER.createBlock("blackwood_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BLACKWOOD_SLAB 			= HELPER.createBlock("blackwood_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BLACKWOOD_STAIRS 			= HELPER.createBlock("blackwood_stairs", () -> new SapWoodStairsBlock(BLACKWOOD_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BLACKWOOD_FENCE 			= HELPER.createBlock("blackwood_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> BLACKWOOD_FENCE_GATE 		= HELPER.createBlock("blackwood_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BLACKWOOD_PRESSURE_PLATE 	= HELPER.createBlock("blackwood_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BLACKWOOD_DOOR 			= HELPER.createBlock("blackwood_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BLACKWOOD_TRAPDOOR 		= HELPER.createBlock("blackwood_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BLACKWOOD_SAPLING 		= HELPER.createBlock("blackwood_sapling", () -> new AbnormalsSaplingBlock(new BlackwoodTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_BLACKWOOD_SAPLING 	= HELPER.createBlockNoItem("potted_blackwood_sapling", () -> new FlowerPotBlock(SapBlocks.BLACKWOOD_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> BLACKWOOD_BUTTON 			= HELPER.createBlock("blackwood_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> BLACKWOOD_LEAVES 			= HELPER.createBlock("blackwood_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> BLACKWOOD_SIGNS = HELPER.createSignBlock("blackwood", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_CEDAR_LOG 		= HELPER.createBlock("stripped_cedar_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_CEDAR_WOOD 		= HELPER.createBlock("stripped_cedar_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CEDAR_LOG					= HELPER.createBlock("cedar_log", () -> new SapLogBlock(STRIPPED_CEDAR_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CEDAR_WOOD 				= HELPER.createBlock("cedar_wood", () -> new SapWoodBlock(STRIPPED_CEDAR_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CEDAR_PLANKS 				= HELPER.createBlock("cedar_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CEDAR_SLAB 				= HELPER.createBlock("cedar_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CEDAR_STAIRS 				= HELPER.createBlock("cedar_stairs", () -> new SapWoodStairsBlock(CEDAR_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CEDAR_FENCE 				= HELPER.createBlock("cedar_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> CEDAR_FENCE_GATE 			= HELPER.createBlock("cedar_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CEDAR_PRESSURE_PLATE 		= HELPER.createBlock("cedar_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CEDAR_DOOR 				= HELPER.createBlock("cedar_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CEDAR_TRAPDOOR 			= HELPER.createBlock("cedar_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CEDAR_SAPLING 			= HELPER.createBlock("cedar_sapling", () -> new AbnormalsSaplingBlock(new CedarTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_CEDAR_SAPLING 		= HELPER.createBlockNoItem("potted_cedar_sapling", () -> new FlowerPotBlock(SapBlocks.CEDAR_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> CEDAR_BUTTON 				= HELPER.createBlock("cedar_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CEDAR_LEAVES 				= HELPER.createBlock("cedar_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> CEDAR_SIGNS = HELPER.createSignBlock("cedar", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_CHERRY_LOG 		= HELPER.createBlock("stripped_cherry_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_CHERRY_WOOD 		= HELPER.createBlock("stripped_cherry_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CHERRY_LOG				= HELPER.createBlock("cherry_log", () -> new SapLogBlock(STRIPPED_CHERRY_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CHERRY_WOOD 				= HELPER.createBlock("cherry_wood", () -> new SapWoodBlock(STRIPPED_CHERRY_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CHERRY_PLANKS 			= HELPER.createBlock("cherry_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CHERRY_SLAB 				= HELPER.createBlock("cherry_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CHERRY_STAIRS 			= HELPER.createBlock("cherry_stairs", () -> new SapWoodStairsBlock(CHERRY_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CHERRY_FENCE 				= HELPER.createBlock("cherry_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> CHERRY_FENCE_GATE 		= HELPER.createBlock("cherry_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CHERRY_PRESSURE_PLATE 	= HELPER.createBlock("cherry_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CHERRY_DOOR 				= HELPER.createBlock("cherry_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CHERRY_TRAPDOOR 			= HELPER.createBlock("cherry_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CHERRY_SAPLING 			= HELPER.createBlock("cherry_sapling", () -> new AbnormalsSaplingBlock(new CherryTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_CHERRY_SAPLING 	= HELPER.createBlockNoItem("potted_cherry_sapling", () -> new FlowerPotBlock(SapBlocks.CHERRY_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> CHERRY_BUTTON 			= HELPER.createBlock("cherry_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CHERRY_LEAVES 			= HELPER.createBlock("cherry_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> CHERRY_SIGNS = HELPER.createSignBlock("cherry", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_CHESTNUT_LOG 	= HELPER.createBlock("stripped_chestnut_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_CHESTNUT_WOOD 	= HELPER.createBlock("stripped_chestnut_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CHESTNUT_LOG				= HELPER.createBlock("chestnut_log", () -> new SapLogBlock(STRIPPED_CHESTNUT_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CHESTNUT_WOOD 			= HELPER.createBlock("chestnut_wood", () -> new SapWoodBlock(STRIPPED_CHESTNUT_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CHESTNUT_PLANKS 			= HELPER.createBlock("chestnut_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CHESTNUT_SLAB 			= HELPER.createBlock("chestnut_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CHESTNUT_STAIRS 			= HELPER.createBlock("chestnut_stairs", () -> new SapWoodStairsBlock(CHESTNUT_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CHESTNUT_FENCE 			= HELPER.createBlock("chestnut_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> CHESTNUT_FENCE_GATE 		= HELPER.createBlock("chestnut_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CHESTNUT_PRESSURE_PLATE 	= HELPER.createBlock("chestnut_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CHESTNUT_DOOR 			= HELPER.createBlock("chestnut_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CHESTNUT_TRAPDOOR 		= HELPER.createBlock("chestnut_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CHESTNUT_SAPLING 			= HELPER.createBlock("chestnut_sapling", () -> new AbnormalsSaplingBlock(new ChestnutTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_CHESTNUT_SAPLING 	= HELPER.createBlockNoItem("potted_chestnut_sapling", () -> new FlowerPotBlock(SapBlocks.CHESTNUT_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> CHESTNUT_BUTTON 			= HELPER.createBlock("chestnut_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CHESTNUT_LEAVES 			= HELPER.createBlock("chestnut_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> CHESTNUT_SIGNS = HELPER.createSignBlock("chestnut", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_CINNAMON_LOG 	= HELPER.createBlock("stripped_cinnamon_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_CINNAMON_WOOD 	= HELPER.createBlock("stripped_cinnamon_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CINNAMON_LOG				= HELPER.createBlock("cinnamon_log", () -> new SapLogBlock(STRIPPED_CINNAMON_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CINNAMON_WOOD 			= HELPER.createBlock("cinnamon_wood", () -> new SapWoodBlock(STRIPPED_CINNAMON_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CINNAMON_PLANKS 			= HELPER.createBlock("cinnamon_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CINNAMON_SLAB 			= HELPER.createBlock("cinnamon_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CINNAMON_STAIRS 			= HELPER.createBlock("cinnamon_stairs", () -> new SapWoodStairsBlock(CINNAMON_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CINNAMON_FENCE 			= HELPER.createBlock("cinnamon_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> CINNAMON_FENCE_GATE 		= HELPER.createBlock("cinnamon_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CINNAMON_PRESSURE_PLATE 	= HELPER.createBlock("cinnamon_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CINNAMON_DOOR 			= HELPER.createBlock("cinnamon_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CINNAMON_TRAPDOOR 		= HELPER.createBlock("cinnamon_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CINNAMON_SAPLING 			= HELPER.createBlock("cinnamon_sapling", () -> new AbnormalsSaplingBlock(new CinnamonTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_CINNAMON_SAPLING 	= HELPER.createBlockNoItem("potted_cinnamon_sapling", () -> new FlowerPotBlock(SapBlocks.CINNAMON_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> CINNAMON_BUTTON 			= HELPER.createBlock("cinnamon_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CINNAMON_LEAVES 			= HELPER.createBlock("cinnamon_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> CINNAMON_SIGNS = HELPER.createSignBlock("cinnamon", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_CLOVE_LOG 		= HELPER.createBlock("stripped_clove_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_CLOVE_WOOD 		= HELPER.createBlock("stripped_clove_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CLOVE_LOG					= HELPER.createBlock("clove_log", () -> new SapLogBlock(STRIPPED_CLOVE_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CLOVE_WOOD 				= HELPER.createBlock("clove_wood", () -> new SapWoodBlock(STRIPPED_CLOVE_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CLOVE_PLANKS 				= HELPER.createBlock("clove_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CLOVE_SLAB 				= HELPER.createBlock("clove_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CLOVE_STAIRS 				= HELPER.createBlock("clove_stairs", () -> new SapWoodStairsBlock(CLOVE_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CLOVE_FENCE 				= HELPER.createBlock("clove_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> CLOVE_FENCE_GATE 			= HELPER.createBlock("clove_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CLOVE_PRESSURE_PLATE 		= HELPER.createBlock("clove_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CLOVE_DOOR 				= HELPER.createBlock("clove_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CLOVE_TRAPDOOR 			= HELPER.createBlock("clove_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CLOVE_SAPLING 			= HELPER.createBlock("clove_sapling", () -> new AbnormalsSaplingBlock(new CloveTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_CLOVE_SAPLING 		= HELPER.createBlockNoItem("potted_clove_sapling", () -> new FlowerPotBlock(SapBlocks.CLOVE_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> CLOVE_BUTTON 				= HELPER.createBlock("clove_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CLOVE_LEAVES 				= HELPER.createBlock("clove_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> CLOVE_SIGNS = HELPER.createSignBlock("clove", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_COTTONWOOD_LOG 	= HELPER.createBlock("stripped_cottonwood_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_COTTONWOOD_WOOD 	= HELPER.createBlock("stripped_cottonwood_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> COTTONWOOD_LOG			= HELPER.createBlock("cottonwood_log", () -> new SapLogBlock(STRIPPED_COTTONWOOD_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> COTTONWOOD_WOOD 			= HELPER.createBlock("cottonwood_wood", () -> new SapWoodBlock(STRIPPED_COTTONWOOD_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> COTTONWOOD_PLANKS 		= HELPER.createBlock("cottonwood_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> COTTONWOOD_SLAB 			= HELPER.createBlock("cottonwood_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> COTTONWOOD_STAIRS 		= HELPER.createBlock("cottonwood_stairs", () -> new SapWoodStairsBlock(COTTONWOOD_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> COTTONWOOD_FENCE 			= HELPER.createBlock("cottonwood_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> COTTONWOOD_FENCE_GATE 	= HELPER.createBlock("cottonwood_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> COTTONWOOD_PRESSURE_PLATE = HELPER.createBlock("cottonwood_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> COTTONWOOD_DOOR 			= HELPER.createBlock("cottonwood_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> COTTONWOOD_TRAPDOOR 		= HELPER.createBlock("cottonwood_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> COTTONWOOD_SAPLING 		= HELPER.createBlock("cottonwood_sapling", () -> new AbnormalsSaplingBlock(new CottonwoodTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_COTTONWOOD_SAPLING = HELPER.createBlockNoItem("potted_cottonwood_sapling", () -> new FlowerPotBlock(SapBlocks.COTTONWOOD_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> COTTONWOOD_BUTTON 		= HELPER.createBlock("cottonwood_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> COTTONWOOD_LEAVES 		= HELPER.createBlock("cottonwood_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> COTTONWOOD_SIGNS = HELPER.createSignBlock("cottonwood", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_CYPRESS_LOG 		= HELPER.createBlock("stripped_cypress_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_CYPRESS_WOOD 	= HELPER.createBlock("stripped_cypress_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CYPRESS_LOG				= HELPER.createBlock("cypress_log", () -> new SapLogBlock(STRIPPED_CYPRESS_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CYPRESS_WOOD 				= HELPER.createBlock("cypress_wood", () -> new SapWoodBlock(STRIPPED_CYPRESS_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CYPRESS_PLANKS 			= HELPER.createBlock("cypress_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CYPRESS_SLAB 				= HELPER.createBlock("cypress_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CYPRESS_STAIRS 			= HELPER.createBlock("cypress_stairs", () -> new SapWoodStairsBlock(CYPRESS_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CYPRESS_FENCE 			= HELPER.createBlock("cypress_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> CYPRESS_FENCE_GATE 		= HELPER.createBlock("cypress_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CYPRESS_PRESSURE_PLATE 	= HELPER.createBlock("cypress_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CYPRESS_DOOR 				= HELPER.createBlock("cypress_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CYPRESS_TRAPDOOR 			= HELPER.createBlock("cypress_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CYPRESS_SAPLING 			= HELPER.createBlock("cypress_sapling", () -> new AbnormalsSaplingBlock(new CypressTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_CYPRESS_SAPLING 	= HELPER.createBlockNoItem("potted_cypress_sapling", () -> new FlowerPotBlock(SapBlocks.CYPRESS_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> CYPRESS_BUTTON 			= HELPER.createBlock("cypress_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> CYPRESS_LEAVES 			= HELPER.createBlock("cypress_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> CYPRESS_SIGNS = HELPER.createSignBlock("cypress", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_ELM_LOG 			= HELPER.createBlock("stripped_elm_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ELM_WOOD 		= HELPER.createBlock("stripped_elm_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ELM_LOG					= HELPER.createBlock("elm_log", () -> new SapLogBlock(STRIPPED_ELM_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ELM_WOOD 					= HELPER.createBlock("elm_wood", () -> new SapWoodBlock(STRIPPED_ELM_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ELM_PLANKS 				= HELPER.createBlock("elm_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ELM_SLAB 					= HELPER.createBlock("elm_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ELM_STAIRS 				= HELPER.createBlock("elm_stairs", () -> new SapWoodStairsBlock(ELM_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ELM_FENCE 				= HELPER.createBlock("elm_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> ELM_FENCE_GATE 			= HELPER.createBlock("elm_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ELM_PRESSURE_PLATE 		= HELPER.createBlock("elm_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ELM_DOOR 					= HELPER.createBlock("elm_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ELM_TRAPDOOR 				= HELPER.createBlock("elm_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ELM_SAPLING 				= HELPER.createBlock("elm_sapling", () -> new AbnormalsSaplingBlock(new ElmTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_ELM_SAPLING 		= HELPER.createBlockNoItem("potted_elm_sapling", () -> new FlowerPotBlock(SapBlocks.ELM_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> ELM_BUTTON 				= HELPER.createBlock("elm_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ELM_LEAVES 				= HELPER.createBlock("elm_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> ELM_SIGNS = HELPER.createSignBlock("elm", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_FIG_LOG 			= HELPER.createBlock("stripped_fig_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_FIG_WOOD 		= HELPER.createBlock("stripped_fig_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> FIG_LOG					= HELPER.createBlock("fig_log", () -> new SapLogBlock(STRIPPED_FIG_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> FIG_WOOD 					= HELPER.createBlock("fig_wood", () -> new SapWoodBlock(STRIPPED_FIG_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> FIG_PLANKS 				= HELPER.createBlock("fig_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> FIG_SLAB 					= HELPER.createBlock("fig_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> FIG_STAIRS 				= HELPER.createBlock("fig_stairs", () -> new SapWoodStairsBlock(FIG_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> FIG_FENCE 				= HELPER.createBlock("fig_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> FIG_FENCE_GATE 			= HELPER.createBlock("fig_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> FIG_PRESSURE_PLATE 		= HELPER.createBlock("fig_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> FIG_DOOR 					= HELPER.createBlock("fig_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> FIG_TRAPDOOR 				= HELPER.createBlock("fig_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> FIG_SAPLING 				= HELPER.createBlock("fig_sapling", () -> new AbnormalsSaplingBlock(new FigTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_FIG_SAPLING 		= HELPER.createBlockNoItem("potted_fig_sapling", () -> new FlowerPotBlock(SapBlocks.FIG_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> FIG_BUTTON 				= HELPER.createBlock("fig_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> FIG_LEAVES 				= HELPER.createBlock("fig_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> FIG_SIGNS = HELPER.createSignBlock("fig", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_FIR_LOG 			= HELPER.createBlock("stripped_fir_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_FIR_WOOD 		= HELPER.createBlock("stripped_fir_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> FIR_LOG					= HELPER.createBlock("fir_log", () -> new SapLogBlock(STRIPPED_FIR_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> FIR_WOOD 					= HELPER.createBlock("fir_wood", () -> new SapWoodBlock(STRIPPED_FIR_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> FIR_PLANKS 				= HELPER.createBlock("fir_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> FIR_SLAB 					= HELPER.createBlock("fir_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> FIR_STAIRS 				= HELPER.createBlock("fir_stairs", () -> new SapWoodStairsBlock(FIR_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> FIR_FENCE 				= HELPER.createBlock("fir_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> FIR_FENCE_GATE 			= HELPER.createBlock("fir_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> FIR_PRESSURE_PLATE 		= HELPER.createBlock("fir_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> FIR_DOOR 					= HELPER.createBlock("fir_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> FIR_TRAPDOOR 				= HELPER.createBlock("fir_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> FIR_SAPLING 				= HELPER.createBlock("fir_sapling", () -> new AbnormalsSaplingBlock(new FirTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_FIR_SAPLING 		= HELPER.createBlockNoItem("potted_fir_sapling", () -> new FlowerPotBlock(SapBlocks.FIR_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> FIR_BUTTON 				= HELPER.createBlock("fir_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> FIR_LEAVES 				= HELPER.createBlock("fir_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> FIR_SIGNS = HELPER.createSignBlock("fir", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_GINKGO_LOG 		= HELPER.createBlock("stripped_ginkgo_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_GINKGO_WOOD 		= HELPER.createBlock("stripped_ginkgo_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> GINKGO_LOG				= HELPER.createBlock("ginkgo_log", () -> new SapLogBlock(STRIPPED_GINKGO_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> GINKGO_WOOD 				= HELPER.createBlock("ginkgo_wood", () -> new SapWoodBlock(STRIPPED_GINKGO_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> GINKGO_PLANKS 			= HELPER.createBlock("ginkgo_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> GINKGO_SLAB 				= HELPER.createBlock("ginkgo_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> GINKGO_STAIRS 			= HELPER.createBlock("ginkgo_stairs", () -> new SapWoodStairsBlock(GINKGO_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> GINKGO_FENCE 				= HELPER.createBlock("ginkgo_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> GINKGO_FENCE_GATE 		= HELPER.createBlock("ginkgo_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> GINKGO_PRESSURE_PLATE 	= HELPER.createBlock("ginkgo_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> GINKGO_DOOR 				= HELPER.createBlock("ginkgo_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> GINKGO_TRAPDOOR 			= HELPER.createBlock("ginkgo_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> GINKGO_SAPLING 			= HELPER.createBlock("ginkgo_sapling", () -> new AbnormalsSaplingBlock(new GinkgoTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_GINKGO_SAPLING 	= HELPER.createBlockNoItem("potted_ginkgo_sapling", () -> new FlowerPotBlock(SapBlocks.GINKGO_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> GINKGO_BUTTON 			= HELPER.createBlock("ginkgo_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> GINKGO_LEAVES 			= HELPER.createBlock("ginkgo_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> GINKGO_SIGNS = HELPER.createSignBlock("ginkgo", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_GUM_LOG 			= HELPER.createBlock("stripped_gum_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_GUM_WOOD 		= HELPER.createBlock("stripped_gum_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> GUM_LOG					= HELPER.createBlock("gum_log", () -> new SapLogBlock(STRIPPED_GUM_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> GUM_WOOD 					= HELPER.createBlock("gum_wood", () -> new SapWoodBlock(STRIPPED_GUM_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> GUM_PLANKS 				= HELPER.createBlock("gum_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> GUM_SLAB 					= HELPER.createBlock("gum_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> GUM_STAIRS 				= HELPER.createBlock("gum_stairs", () -> new SapWoodStairsBlock(GUM_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> GUM_FENCE 				= HELPER.createBlock("gum_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> GUM_FENCE_GATE 			= HELPER.createBlock("gum_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> GUM_PRESSURE_PLATE 		= HELPER.createBlock("gum_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> GUM_DOOR 					= HELPER.createBlock("gum_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> GUM_TRAPDOOR 				= HELPER.createBlock("gum_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> GUM_SAPLING 				= HELPER.createBlock("gum_sapling", () -> new AbnormalsSaplingBlock(new GumTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_GUM_SAPLING 		= HELPER.createBlockNoItem("potted_gum_sapling", () -> new FlowerPotBlock(SapBlocks.GUM_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> GUM_BUTTON 				= HELPER.createBlock("gum_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> GUM_LEAVES 				= HELPER.createBlock("gum_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> GUM_SIGNS = HELPER.createSignBlock("gum", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_HAWTHORN_LOG 	= HELPER.createBlock("stripped_hawthorn_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_HAWTHORN_WOOD 	= HELPER.createBlock("stripped_hawthorn_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HAWTHORN_LOG				= HELPER.createBlock("hawthorn_log", () -> new SapLogBlock(STRIPPED_HAWTHORN_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HAWTHORN_WOOD 			= HELPER.createBlock("hawthorn_wood", () -> new SapWoodBlock(STRIPPED_HAWTHORN_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HAWTHORN_PLANKS 			= HELPER.createBlock("hawthorn_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HAWTHORN_SLAB 			= HELPER.createBlock("hawthorn_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HAWTHORN_STAIRS 			= HELPER.createBlock("hawthorn_stairs", () -> new SapWoodStairsBlock(HAWTHORN_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HAWTHORN_FENCE 			= HELPER.createBlock("hawthorn_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> HAWTHORN_FENCE_GATE 		= HELPER.createBlock("hawthorn_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HAWTHORN_PRESSURE_PLATE 	= HELPER.createBlock("hawthorn_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HAWTHORN_DOOR 			= HELPER.createBlock("hawthorn_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HAWTHORN_TRAPDOOR 		= HELPER.createBlock("hawthorn_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HAWTHORN_SAPLING 			= HELPER.createBlock("hawthorn_sapling", () -> new AbnormalsSaplingBlock(new HawthornTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_HAWTHORN_SAPLING 	= HELPER.createBlockNoItem("potted_hawthorn_sapling", () -> new FlowerPotBlock(SapBlocks.HAWTHORN_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> HAWTHORN_BUTTON 			= HELPER.createBlock("hawthorn_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HAWTHORN_LEAVES 			= HELPER.createBlock("hawthorn_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> HAWTHORN_SIGNS = HELPER.createSignBlock("hawthorn", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_HAZEL_LOG 		= HELPER.createBlock("stripped_hazel_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_HAZEL_WOOD 		= HELPER.createBlock("stripped_hazel_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HAZEL_LOG					= HELPER.createBlock("hazel_log", () -> new SapLogBlock(STRIPPED_HAZEL_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HAZEL_WOOD 				= HELPER.createBlock("hazel_wood", () -> new SapWoodBlock(STRIPPED_HAZEL_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HAZEL_PLANKS 				= HELPER.createBlock("hazel_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HAZEL_SLAB 				= HELPER.createBlock("hazel_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HAZEL_STAIRS 				= HELPER.createBlock("hazel_stairs", () -> new SapWoodStairsBlock(HAZEL_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HAZEL_FENCE 				= HELPER.createBlock("hazel_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> HAZEL_FENCE_GATE 			= HELPER.createBlock("hazel_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HAZEL_PRESSURE_PLATE 		= HELPER.createBlock("hazel_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HAZEL_DOOR 				= HELPER.createBlock("hazel_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HAZEL_TRAPDOOR 			= HELPER.createBlock("hazel_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HAZEL_SAPLING 			= HELPER.createBlock("hazel_sapling", () -> new AbnormalsSaplingBlock(new HazelTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_HAZEL_SAPLING 		= HELPER.createBlockNoItem("potted_hazel_sapling", () -> new FlowerPotBlock(SapBlocks.HAZEL_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> HAZEL_BUTTON 				= HELPER.createBlock("hazel_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HAZEL_LEAVES 				= HELPER.createBlock("hazel_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> HAZEL_SIGNS = HELPER.createSignBlock("hazel", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_HEMLOCK_LOG 		= HELPER.createBlock("stripped_hemlock_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_HEMLOCK_WOOD 	= HELPER.createBlock("stripped_hemlock_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HEMLOCK_LOG				= HELPER.createBlock("hemlock_log", () -> new SapLogBlock(STRIPPED_HEMLOCK_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HEMLOCK_WOOD 				= HELPER.createBlock("hemlock_wood", () -> new SapWoodBlock(STRIPPED_HEMLOCK_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HEMLOCK_PLANKS 			= HELPER.createBlock("hemlock_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HEMLOCK_SLAB 				= HELPER.createBlock("hemlock_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HEMLOCK_STAIRS 			= HELPER.createBlock("hemlock_stairs", () -> new SapWoodStairsBlock(HEMLOCK_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HEMLOCK_FENCE 			= HELPER.createBlock("hemlock_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> HEMLOCK_FENCE_GATE 		= HELPER.createBlock("hemlock_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HEMLOCK_PRESSURE_PLATE 	= HELPER.createBlock("hemlock_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HEMLOCK_DOOR 				= HELPER.createBlock("hemlock_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HEMLOCK_TRAPDOOR 			= HELPER.createBlock("hemlock_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HEMLOCK_SAPLING 			= HELPER.createBlock("hemlock_sapling", () -> new AbnormalsSaplingBlock(new HemlockTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_HEMLOCK_SAPLING 	= HELPER.createBlockNoItem("potted_hemlock_sapling", () -> new FlowerPotBlock(SapBlocks.HEMLOCK_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> HEMLOCK_BUTTON 			= HELPER.createBlock("hemlock_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HEMLOCK_LEAVES 			= HELPER.createBlock("hemlock_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> HEMLOCK_SIGNS = HELPER.createSignBlock("hemlock", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_HICKORY_LOG 		= HELPER.createBlock("stripped_hickory_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_HICKORY_WOOD 	= HELPER.createBlock("stripped_hickory_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HICKORY_LOG				= HELPER.createBlock("hickory_log", () -> new SapLogBlock(STRIPPED_HICKORY_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HICKORY_WOOD 				= HELPER.createBlock("hickory_wood", () -> new SapWoodBlock(STRIPPED_HICKORY_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HICKORY_PLANKS 			= HELPER.createBlock("hickory_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HICKORY_SLAB 				= HELPER.createBlock("hickory_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HICKORY_STAIRS 			= HELPER.createBlock("hickory_stairs", () -> new SapWoodStairsBlock(HICKORY_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HICKORY_FENCE 			= HELPER.createBlock("hickory_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> HICKORY_FENCE_GATE 		= HELPER.createBlock("hickory_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HICKORY_PRESSURE_PLATE 	= HELPER.createBlock("hickory_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HICKORY_DOOR 				= HELPER.createBlock("hickory_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HICKORY_TRAPDOOR 			= HELPER.createBlock("hickory_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HICKORY_SAPLING 			= HELPER.createBlock("hickory_sapling", () -> new AbnormalsSaplingBlock(new HickoryTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_HICKORY_SAPLING 	= HELPER.createBlockNoItem("potted_hickory_sapling", () -> new FlowerPotBlock(SapBlocks.HICKORY_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> HICKORY_BUTTON 			= HELPER.createBlock("hickory_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HICKORY_LEAVES 			= HELPER.createBlock("hickory_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> HICKORY_SIGNS = HELPER.createSignBlock("hickory", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_HORNBEAM_LOG 	= HELPER.createBlock("stripped_hornbeam_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_HORNBEAM_WOOD 	= HELPER.createBlock("stripped_hornbeam_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HORNBEAM_LOG				= HELPER.createBlock("hornbeam_log", () -> new SapLogBlock(STRIPPED_HORNBEAM_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HORNBEAM_WOOD 			= HELPER.createBlock("hornbeam_wood", () -> new SapWoodBlock(STRIPPED_HORNBEAM_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HORNBEAM_PLANKS 			= HELPER.createBlock("hornbeam_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HORNBEAM_SLAB 			= HELPER.createBlock("hornbeam_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HORNBEAM_STAIRS 			= HELPER.createBlock("hornbeam_stairs", () -> new SapWoodStairsBlock(HORNBEAM_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HORNBEAM_FENCE 			= HELPER.createBlock("hornbeam_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> HORNBEAM_FENCE_GATE 		= HELPER.createBlock("hornbeam_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HORNBEAM_PRESSURE_PLATE 	= HELPER.createBlock("hornbeam_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HORNBEAM_DOOR 			= HELPER.createBlock("hornbeam_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HORNBEAM_TRAPDOOR 		= HELPER.createBlock("hornbeam_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HORNBEAM_SAPLING 			= HELPER.createBlock("hornbeam_sapling", () -> new AbnormalsSaplingBlock(new HornbeamTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_HORNBEAM_SAPLING 	= HELPER.createBlockNoItem("potted_hornbeam_sapling", () -> new FlowerPotBlock(SapBlocks.HORNBEAM_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> HORNBEAM_BUTTON 			= HELPER.createBlock("hornbeam_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> HORNBEAM_LEAVES 			= HELPER.createBlock("hornbeam_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> HORNBEAM_SIGNS = HELPER.createSignBlock("hornbeam", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_JUNIPER_LOG 		= HELPER.createBlock("stripped_juniper_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_JUNIPER_WOOD 	= HELPER.createBlock("stripped_juniper_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> JUNIPER_LOG				= HELPER.createBlock("juniper_log", () -> new SapLogBlock(STRIPPED_JUNIPER_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> JUNIPER_WOOD 				= HELPER.createBlock("juniper_wood", () -> new SapWoodBlock(STRIPPED_JUNIPER_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> JUNIPER_PLANKS 			= HELPER.createBlock("juniper_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> JUNIPER_SLAB 				= HELPER.createBlock("juniper_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> JUNIPER_STAIRS 			= HELPER.createBlock("juniper_stairs", () -> new SapWoodStairsBlock(JUNIPER_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> JUNIPER_FENCE 			= HELPER.createBlock("juniper_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> JUNIPER_FENCE_GATE 		= HELPER.createBlock("juniper_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> JUNIPER_PRESSURE_PLATE 	= HELPER.createBlock("juniper_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> JUNIPER_DOOR 				= HELPER.createBlock("juniper_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> JUNIPER_TRAPDOOR 			= HELPER.createBlock("juniper_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> JUNIPER_SAPLING 			= HELPER.createBlock("juniper_sapling", () -> new AbnormalsSaplingBlock(new JuniperTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_JUNIPER_SAPLING 	= HELPER.createBlockNoItem("potted_juniper_sapling", () -> new FlowerPotBlock(SapBlocks.JUNIPER_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> JUNIPER_BUTTON 			= HELPER.createBlock("juniper_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> JUNIPER_LEAVES 			= HELPER.createBlock("juniper_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> JUNIPER_SIGNS = HELPER.createSignBlock("juniper", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_LARCH_LOG 		= HELPER.createBlock("stripped_larch_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_LARCH_WOOD 		= HELPER.createBlock("stripped_larch_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LARCH_LOG					= HELPER.createBlock("larch_log", () -> new SapLogBlock(STRIPPED_LARCH_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LARCH_WOOD 				= HELPER.createBlock("larch_wood", () -> new SapWoodBlock(STRIPPED_LARCH_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LARCH_PLANKS 				= HELPER.createBlock("larch_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LARCH_SLAB 				= HELPER.createBlock("larch_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LARCH_STAIRS 				= HELPER.createBlock("larch_stairs", () -> new SapWoodStairsBlock(LARCH_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LARCH_FENCE 				= HELPER.createBlock("larch_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> LARCH_FENCE_GATE 			= HELPER.createBlock("larch_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LARCH_PRESSURE_PLATE 		= HELPER.createBlock("larch_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LARCH_DOOR 				= HELPER.createBlock("larch_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LARCH_TRAPDOOR 			= HELPER.createBlock("larch_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LARCH_SAPLING 			= HELPER.createBlock("larch_sapling", () -> new AbnormalsSaplingBlock(new LarchTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_LARCH_SAPLING 		= HELPER.createBlockNoItem("potted_larch_sapling", () -> new FlowerPotBlock(SapBlocks.LARCH_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> LARCH_BUTTON 				= HELPER.createBlock("larch_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LARCH_LEAVES 				= HELPER.createBlock("larch_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> LARCH_SIGNS = HELPER.createSignBlock("larch", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_LAUREL_LOG 		= HELPER.createBlock("stripped_laurel_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_LAUREL_WOOD 		= HELPER.createBlock("stripped_laurel_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LAUREL_LOG				= HELPER.createBlock("laurel_log", () -> new SapLogBlock(STRIPPED_LAUREL_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LAUREL_WOOD 				= HELPER.createBlock("laurel_wood", () -> new SapWoodBlock(STRIPPED_LAUREL_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LAUREL_PLANKS 			= HELPER.createBlock("laurel_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LAUREL_SLAB 				= HELPER.createBlock("laurel_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LAUREL_STAIRS 			= HELPER.createBlock("laurel_stairs", () -> new SapWoodStairsBlock(LAUREL_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LAUREL_FENCE 				= HELPER.createBlock("laurel_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> LAUREL_FENCE_GATE 		= HELPER.createBlock("laurel_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LAUREL_PRESSURE_PLATE 	= HELPER.createBlock("laurel_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LAUREL_DOOR 				= HELPER.createBlock("laurel_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LAUREL_TRAPDOOR 			= HELPER.createBlock("laurel_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LAUREL_SAPLING 			= HELPER.createBlock("laurel_sapling", () -> new AbnormalsSaplingBlock(new LaurelTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_LAUREL_SAPLING 	= HELPER.createBlockNoItem("potted_laurel_sapling", () -> new FlowerPotBlock(SapBlocks.LAUREL_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> LAUREL_BUTTON 			= HELPER.createBlock("laurel_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LAUREL_LEAVES 			= HELPER.createBlock("laurel_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> LAUREL_SIGNS = HELPER.createSignBlock("laurel", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_LEMON_LOG 		= HELPER.createBlock("stripped_lemon_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_LEMON_WOOD 		= HELPER.createBlock("stripped_lemon_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LEMON_LOG					= HELPER.createBlock("lemon_log", () -> new SapLogBlock(STRIPPED_LEMON_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LEMON_WOOD 				= HELPER.createBlock("lemon_wood", () -> new SapWoodBlock(STRIPPED_LEMON_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LEMON_PLANKS 				= HELPER.createBlock("lemon_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LEMON_SLAB 				= HELPER.createBlock("lemon_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LEMON_STAIRS 				= HELPER.createBlock("lemon_stairs", () -> new SapWoodStairsBlock(LEMON_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LEMON_FENCE 				= HELPER.createBlock("lemon_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> LEMON_FENCE_GATE 			= HELPER.createBlock("lemon_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LEMON_PRESSURE_PLATE 		= HELPER.createBlock("lemon_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LEMON_DOOR 				= HELPER.createBlock("lemon_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LEMON_TRAPDOOR 			= HELPER.createBlock("lemon_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LEMON_SAPLING 			= HELPER.createBlock("lemon_sapling", () -> new AbnormalsSaplingBlock(new LemonTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_LEMON_SAPLING 		= HELPER.createBlockNoItem("potted_lemon_sapling", () -> new FlowerPotBlock(SapBlocks.LEMON_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> LEMON_BUTTON 				= HELPER.createBlock("lemon_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LEMON_LEAVES 				= HELPER.createBlock("lemon_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> LEMON_SIGNS = HELPER.createSignBlock("lemon", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_LIME_LOG 		= HELPER.createBlock("stripped_lime_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_LIME_WOOD 		= HELPER.createBlock("stripped_lime_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LIME_LOG					= HELPER.createBlock("lime_log", () -> new SapLogBlock(STRIPPED_LIME_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LIME_WOOD 				= HELPER.createBlock("lime_wood", () -> new SapWoodBlock(STRIPPED_LIME_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LIME_PLANKS 				= HELPER.createBlock("lime_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LIME_SLAB 				= HELPER.createBlock("lime_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LIME_STAIRS 				= HELPER.createBlock("lime_stairs", () -> new SapWoodStairsBlock(LIME_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LIME_FENCE 				= HELPER.createBlock("lime_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> LIME_FENCE_GATE 			= HELPER.createBlock("lime_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LIME_PRESSURE_PLATE 		= HELPER.createBlock("lime_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LIME_DOOR 				= HELPER.createBlock("lime_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LIME_TRAPDOOR 			= HELPER.createBlock("lime_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LIME_SAPLING 				= HELPER.createBlock("lime_sapling", () -> new AbnormalsSaplingBlock(new LimeTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_LIME_SAPLING 		= HELPER.createBlockNoItem("potted_lime_sapling", () -> new FlowerPotBlock(SapBlocks.LIME_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> LIME_BUTTON 				= HELPER.createBlock("lime_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LIME_LEAVES 				= HELPER.createBlock("lime_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> LIME_SIGNS = HELPER.createSignBlock("lime", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_LINDEN_LOG 		= HELPER.createBlock("stripped_linden_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_LINDEN_WOOD 		= HELPER.createBlock("stripped_linden_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LINDEN_LOG				= HELPER.createBlock("linden_log", () -> new SapLogBlock(STRIPPED_LINDEN_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LINDEN_WOOD 				= HELPER.createBlock("linden_wood", () -> new SapWoodBlock(STRIPPED_LINDEN_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LINDEN_PLANKS 			= HELPER.createBlock("linden_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LINDEN_SLAB 				= HELPER.createBlock("linden_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LINDEN_STAIRS 			= HELPER.createBlock("linden_stairs", () -> new SapWoodStairsBlock(LINDEN_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LINDEN_FENCE 				= HELPER.createBlock("linden_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> LINDEN_FENCE_GATE 		= HELPER.createBlock("linden_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LINDEN_PRESSURE_PLATE 	= HELPER.createBlock("linden_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LINDEN_DOOR 				= HELPER.createBlock("linden_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LINDEN_TRAPDOOR 			= HELPER.createBlock("linden_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LINDEN_SAPLING 			= HELPER.createBlock("linden_sapling", () -> new AbnormalsSaplingBlock(new LindenTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_LINDEN_SAPLING 	= HELPER.createBlockNoItem("potted_linden_sapling", () -> new FlowerPotBlock(SapBlocks.LINDEN_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> LINDEN_BUTTON 			= HELPER.createBlock("linden_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LINDEN_LEAVES 			= HELPER.createBlock("linden_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> LINDEN_SIGNS = HELPER.createSignBlock("linden", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_LOCUST_LOG 		= HELPER.createBlock("stripped_locust_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_LOCUST_WOOD 		= HELPER.createBlock("stripped_locust_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LOCUST_LOG				= HELPER.createBlock("locust_log", () -> new SapLogBlock(STRIPPED_LOCUST_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LOCUST_WOOD 				= HELPER.createBlock("locust_wood", () -> new SapWoodBlock(STRIPPED_LOCUST_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LOCUST_PLANKS 			= HELPER.createBlock("locust_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LOCUST_SLAB 				= HELPER.createBlock("locust_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LOCUST_STAIRS 			= HELPER.createBlock("locust_stairs", () -> new SapWoodStairsBlock(LOCUST_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LOCUST_FENCE 				= HELPER.createBlock("locust_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> LOCUST_FENCE_GATE 		= HELPER.createBlock("locust_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LOCUST_PRESSURE_PLATE 	= HELPER.createBlock("locust_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LOCUST_DOOR 				= HELPER.createBlock("locust_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LOCUST_TRAPDOOR 			= HELPER.createBlock("locust_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LOCUST_SAPLING 			= HELPER.createBlock("locust_sapling", () -> new AbnormalsSaplingBlock(new LocustTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_LOCUST_SAPLING 	= HELPER.createBlockNoItem("potted_locust_sapling", () -> new FlowerPotBlock(SapBlocks.LOCUST_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> LOCUST_BUTTON 			= HELPER.createBlock("locust_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> LOCUST_LEAVES 			= HELPER.createBlock("locust_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> LOCUST_SIGNS = HELPER.createSignBlock("locust", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_MACADAMIA_LOG 	= HELPER.createBlock("stripped_macadamia_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_MACADAMIA_WOOD 	= HELPER.createBlock("stripped_macadamia_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MACADAMIA_LOG				= HELPER.createBlock("macadamia_log", () -> new SapLogBlock(STRIPPED_MACADAMIA_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MACADAMIA_WOOD 			= HELPER.createBlock("macadamia_wood", () -> new SapWoodBlock(STRIPPED_MACADAMIA_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MACADAMIA_PLANKS 			= HELPER.createBlock("macadamia_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MACADAMIA_SLAB 			= HELPER.createBlock("macadamia_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MACADAMIA_STAIRS 			= HELPER.createBlock("macadamia_stairs", () -> new SapWoodStairsBlock(MACADAMIA_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MACADAMIA_FENCE 			= HELPER.createBlock("macadamia_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> MACADAMIA_FENCE_GATE 		= HELPER.createBlock("macadamia_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MACADAMIA_PRESSURE_PLATE 	= HELPER.createBlock("macadamia_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MACADAMIA_DOOR 			= HELPER.createBlock("macadamia_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MACADAMIA_TRAPDOOR 		= HELPER.createBlock("macadamia_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MACADAMIA_SAPLING 		= HELPER.createBlock("macadamia_sapling", () -> new AbnormalsSaplingBlock(new MacadamiaTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_MACADAMIA_SAPLING 	= HELPER.createBlockNoItem("potted_macadamia_sapling", () -> new FlowerPotBlock(SapBlocks.MACADAMIA_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> MACADAMIA_BUTTON 			= HELPER.createBlock("macadamia_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MACADAMIA_LEAVES 			= HELPER.createBlock("macadamia_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> MACADAMIA_SIGNS = HELPER.createSignBlock("macadamia", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_MAHOGANY_LOG 	= HELPER.createBlock("stripped_mahogany_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_MAHOGANY_WOOD 	= HELPER.createBlock("stripped_mahogany_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MAHOGANY_LOG				= HELPER.createBlock("mahogany_log", () -> new SapLogBlock(STRIPPED_MAHOGANY_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MAHOGANY_WOOD 			= HELPER.createBlock("mahogany_wood", () -> new SapWoodBlock(STRIPPED_MAHOGANY_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MAHOGANY_PLANKS 			= HELPER.createBlock("mahogany_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MAHOGANY_SLAB 			= HELPER.createBlock("mahogany_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MAHOGANY_STAIRS 			= HELPER.createBlock("mahogany_stairs", () -> new SapWoodStairsBlock(MAHOGANY_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MAHOGANY_FENCE 			= HELPER.createBlock("mahogany_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> MAHOGANY_FENCE_GATE 		= HELPER.createBlock("mahogany_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MAHOGANY_PRESSURE_PLATE 	= HELPER.createBlock("mahogany_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MAHOGANY_DOOR 			= HELPER.createBlock("mahogany_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MAHOGANY_TRAPDOOR 		= HELPER.createBlock("mahogany_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MAHOGANY_SAPLING 			= HELPER.createBlock("mahogany_sapling", () -> new AbnormalsSaplingBlock(new MahoganyTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_MAHOGANY_SAPLING 	= HELPER.createBlockNoItem("potted_mahogany_sapling", () -> new FlowerPotBlock(SapBlocks.MAHOGANY_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> MAHOGANY_BUTTON 			= HELPER.createBlock("mahogany_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MAHOGANY_LEAVES 			= HELPER.createBlock("mahogany_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> MAHOGANY_SIGNS = HELPER.createSignBlock("mahogany", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_MANGO_LOG 		= HELPER.createBlock("stripped_mango_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_MANGO_WOOD 		= HELPER.createBlock("stripped_mango_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MANGO_LOG					= HELPER.createBlock("mango_log", () -> new SapLogBlock(STRIPPED_MANGO_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MANGO_WOOD 				= HELPER.createBlock("mango_wood", () -> new SapWoodBlock(STRIPPED_MANGO_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MANGO_PLANKS 				= HELPER.createBlock("mango_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MANGO_SLAB 				= HELPER.createBlock("mango_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MANGO_STAIRS 				= HELPER.createBlock("mango_stairs", () -> new SapWoodStairsBlock(MANGO_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MANGO_FENCE 				= HELPER.createBlock("mango_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> MANGO_FENCE_GATE 			= HELPER.createBlock("mango_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MANGO_PRESSURE_PLATE 		= HELPER.createBlock("mango_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MANGO_DOOR 				= HELPER.createBlock("mango_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MANGO_TRAPDOOR 			= HELPER.createBlock("mango_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MANGO_SAPLING 			= HELPER.createBlock("mango_sapling", () -> new AbnormalsSaplingBlock(new MangoTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_MANGO_SAPLING 		= HELPER.createBlockNoItem("potted_mango_sapling", () -> new FlowerPotBlock(SapBlocks.MANGO_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> MANGO_BUTTON 				= HELPER.createBlock("mango_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MANGO_LEAVES 				= HELPER.createBlock("mango_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> MANGO_SIGNS = HELPER.createSignBlock("mango", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_MAPLE_LOG 		= HELPER.createBlock("stripped_maple_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_MAPLE_WOOD 		= HELPER.createBlock("stripped_maple_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MAPLE_LOG					= HELPER.createBlock("maple_log", () -> new SapLogBlock(STRIPPED_MAPLE_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MAPLE_WOOD 				= HELPER.createBlock("maple_wood", () -> new SapWoodBlock(STRIPPED_MAPLE_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MAPLE_PLANKS 				= HELPER.createBlock("maple_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MAPLE_SLAB 				= HELPER.createBlock("maple_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MAPLE_STAIRS 				= HELPER.createBlock("maple_stairs", () -> new SapWoodStairsBlock(MAPLE_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MAPLE_FENCE 				= HELPER.createBlock("maple_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> MAPLE_FENCE_GATE 			= HELPER.createBlock("maple_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MAPLE_PRESSURE_PLATE 		= HELPER.createBlock("maple_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MAPLE_DOOR 				= HELPER.createBlock("maple_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MAPLE_TRAPDOOR 			= HELPER.createBlock("maple_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MAPLE_SAPLING 			= HELPER.createBlock("maple_sapling", () -> new AbnormalsSaplingBlock(new MapleTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_MAPLE_SAPLING 		= HELPER.createBlockNoItem("potted_maple_sapling", () -> new FlowerPotBlock(SapBlocks.MAPLE_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> MAPLE_BUTTON 				= HELPER.createBlock("maple_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MAPLE_LEAVES 				= HELPER.createBlock("maple_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> MAPLE_SIGNS = HELPER.createSignBlock("maple", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_MESQUITE_LOG 	= HELPER.createBlock("stripped_mesquite_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_MESQUITE_WOOD 	= HELPER.createBlock("stripped_mesquite_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MESQUITE_LOG				= HELPER.createBlock("mesquite_log", () -> new SapLogBlock(STRIPPED_MESQUITE_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MESQUITE_WOOD 			= HELPER.createBlock("mesquite_wood", () -> new SapWoodBlock(STRIPPED_MESQUITE_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MESQUITE_PLANKS 			= HELPER.createBlock("mesquite_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MESQUITE_SLAB 			= HELPER.createBlock("mesquite_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MESQUITE_STAIRS 			= HELPER.createBlock("mesquite_stairs", () -> new SapWoodStairsBlock(MESQUITE_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MESQUITE_FENCE 			= HELPER.createBlock("mesquite_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> MESQUITE_FENCE_GATE 		= HELPER.createBlock("mesquite_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MESQUITE_PRESSURE_PLATE 	= HELPER.createBlock("mesquite_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MESQUITE_DOOR 			= HELPER.createBlock("mesquite_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MESQUITE_TRAPDOOR 		= HELPER.createBlock("mesquite_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MESQUITE_SAPLING 			= HELPER.createBlock("mesquite_sapling", () -> new AbnormalsSaplingBlock(new MesquiteTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_MESQUITE_SAPLING 	= HELPER.createBlockNoItem("potted_mesquite_sapling", () -> new FlowerPotBlock(SapBlocks.MESQUITE_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> MESQUITE_BUTTON 			= HELPER.createBlock("mesquite_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MESQUITE_LEAVES 			= HELPER.createBlock("mesquite_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> MESQUITE_SIGNS = HELPER.createSignBlock("mesquite", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_MULBERRY_LOG 	= HELPER.createBlock("stripped_mulberry_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_MULBERRY_WOOD 	= HELPER.createBlock("stripped_mulberry_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MULBERRY_LOG				= HELPER.createBlock("mulberry_log", () -> new SapLogBlock(STRIPPED_MULBERRY_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MULBERRY_WOOD 			= HELPER.createBlock("mulberry_wood", () -> new SapWoodBlock(STRIPPED_MULBERRY_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MULBERRY_PLANKS 			= HELPER.createBlock("mulberry_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MULBERRY_SLAB 			= HELPER.createBlock("mulberry_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MULBERRY_STAIRS 			= HELPER.createBlock("mulberry_stairs", () -> new SapWoodStairsBlock(MULBERRY_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MULBERRY_FENCE 			= HELPER.createBlock("mulberry_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> MULBERRY_FENCE_GATE 		= HELPER.createBlock("mulberry_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MULBERRY_PRESSURE_PLATE 	= HELPER.createBlock("mulberry_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MULBERRY_DOOR 			= HELPER.createBlock("mulberry_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MULBERRY_TRAPDOOR 		= HELPER.createBlock("mulberry_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MULBERRY_SAPLING 			= HELPER.createBlock("mulberry_sapling", () -> new AbnormalsSaplingBlock(new MulberryTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_MULBERRY_SAPLING 	= HELPER.createBlockNoItem("potted_mulberry_sapling", () -> new FlowerPotBlock(SapBlocks.MULBERRY_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> MULBERRY_BUTTON 			= HELPER.createBlock("mulberry_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> MULBERRY_LEAVES 			= HELPER.createBlock("mulberry_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> MULBERRY_SIGNS = HELPER.createSignBlock("mulberry", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_OLIVE_LOG 		= HELPER.createBlock("stripped_olive_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_OLIVE_WOOD 		= HELPER.createBlock("stripped_olive_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> OLIVE_LOG					= HELPER.createBlock("olive_log", () -> new SapLogBlock(STRIPPED_OLIVE_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> OLIVE_WOOD 				= HELPER.createBlock("olive_wood", () -> new SapWoodBlock(STRIPPED_OLIVE_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> OLIVE_PLANKS 				= HELPER.createBlock("olive_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> OLIVE_SLAB 				= HELPER.createBlock("olive_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> OLIVE_STAIRS 				= HELPER.createBlock("olive_stairs", () -> new SapWoodStairsBlock(OLIVE_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> OLIVE_FENCE 				= HELPER.createBlock("olive_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> OLIVE_FENCE_GATE 			= HELPER.createBlock("olive_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> OLIVE_PRESSURE_PLATE 		= HELPER.createBlock("olive_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> OLIVE_DOOR 				= HELPER.createBlock("olive_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> OLIVE_TRAPDOOR 			= HELPER.createBlock("olive_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> OLIVE_SAPLING 			= HELPER.createBlock("olive_sapling", () -> new AbnormalsSaplingBlock(new OliveTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_OLIVE_SAPLING 		= HELPER.createBlockNoItem("potted_olive_sapling", () -> new FlowerPotBlock(SapBlocks.OLIVE_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> OLIVE_BUTTON 				= HELPER.createBlock("olive_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> OLIVE_LEAVES 				= HELPER.createBlock("olive_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> OLIVE_SIGNS = HELPER.createSignBlock("olive", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_ORANGE_LOG 		= HELPER.createBlock("stripped_orange_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ORANGE_WOOD 		= HELPER.createBlock("stripped_orange_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ORANGE_LOG				= HELPER.createBlock("orange_log", () -> new SapLogBlock(STRIPPED_ORANGE_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ORANGE_WOOD 				= HELPER.createBlock("orange_wood", () -> new SapWoodBlock(STRIPPED_ORANGE_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ORANGE_PLANKS 			= HELPER.createBlock("orange_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ORANGE_SLAB 				= HELPER.createBlock("orange_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ORANGE_STAIRS 			= HELPER.createBlock("orange_stairs", () -> new SapWoodStairsBlock(ORANGE_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ORANGE_FENCE 				= HELPER.createBlock("orange_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> ORANGE_FENCE_GATE 		= HELPER.createBlock("orange_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ORANGE_PRESSURE_PLATE 	= HELPER.createBlock("orange_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ORANGE_DOOR 				= HELPER.createBlock("orange_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ORANGE_TRAPDOOR 			= HELPER.createBlock("orange_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ORANGE_SAPLING 			= HELPER.createBlock("orange_sapling", () -> new AbnormalsSaplingBlock(new OrangeTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_ORANGE_SAPLING 	= HELPER.createBlockNoItem("potted_orange_sapling", () -> new FlowerPotBlock(SapBlocks.ORANGE_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> ORANGE_BUTTON 			= HELPER.createBlock("orange_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ORANGE_LEAVES 			= HELPER.createBlock("orange_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> ORANGE_SIGNS = HELPER.createSignBlock("orange", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_PEACH_LOG 		= HELPER.createBlock("stripped_peach_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_PEACH_WOOD 		= HELPER.createBlock("stripped_peach_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PEACH_LOG					= HELPER.createBlock("peach_log", () -> new SapLogBlock(STRIPPED_PEACH_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PEACH_WOOD 				= HELPER.createBlock("peach_wood", () -> new SapWoodBlock(STRIPPED_PEACH_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PEACH_PLANKS 				= HELPER.createBlock("peach_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PEACH_SLAB 				= HELPER.createBlock("peach_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PEACH_STAIRS 				= HELPER.createBlock("peach_stairs", () -> new SapWoodStairsBlock(PEACH_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PEACH_FENCE 				= HELPER.createBlock("peach_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> PEACH_FENCE_GATE 			= HELPER.createBlock("peach_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PEACH_PRESSURE_PLATE 		= HELPER.createBlock("peach_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PEACH_DOOR 				= HELPER.createBlock("peach_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PEACH_TRAPDOOR 			= HELPER.createBlock("peach_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PEACH_SAPLING 			= HELPER.createBlock("peach_sapling", () -> new AbnormalsSaplingBlock(new PeachTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_PEACH_SAPLING 		= HELPER.createBlockNoItem("potted_peach_sapling", () -> new FlowerPotBlock(SapBlocks.PEACH_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> PEACH_BUTTON 				= HELPER.createBlock("peach_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PEACH_LEAVES 				= HELPER.createBlock("peach_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> PEACH_SIGNS = HELPER.createSignBlock("peach", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_PEAR_LOG 		= HELPER.createBlock("stripped_pear_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_PEAR_WOOD 		= HELPER.createBlock("stripped_pear_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PEAR_LOG					= HELPER.createBlock("pear_log", () -> new SapLogBlock(STRIPPED_PEAR_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PEAR_WOOD 				= HELPER.createBlock("pear_wood", () -> new SapWoodBlock(STRIPPED_PEAR_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PEAR_PLANKS 				= HELPER.createBlock("pear_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PEAR_SLAB 				= HELPER.createBlock("pear_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PEAR_STAIRS 				= HELPER.createBlock("pear_stairs", () -> new SapWoodStairsBlock(PEAR_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PEAR_FENCE 				= HELPER.createBlock("pear_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> PEAR_FENCE_GATE 			= HELPER.createBlock("pear_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PEAR_PRESSURE_PLATE 		= HELPER.createBlock("pear_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PEAR_DOOR 				= HELPER.createBlock("pear_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PEAR_TRAPDOOR 			= HELPER.createBlock("pear_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PEAR_SAPLING 				= HELPER.createBlock("pear_sapling", () -> new AbnormalsSaplingBlock(new PearTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_PEAR_SAPLING 		= HELPER.createBlockNoItem("potted_pear_sapling", () -> new FlowerPotBlock(SapBlocks.PEAR_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> PEAR_BUTTON 				= HELPER.createBlock("pear_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PEAR_LEAVES 				= HELPER.createBlock("pear_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> PEAR_SIGNS = HELPER.createSignBlock("pear", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_PECAN_LOG 		= HELPER.createBlock("stripped_pecan_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_PECAN_WOOD 		= HELPER.createBlock("stripped_pecan_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PECAN_LOG					= HELPER.createBlock("pecan_log", () -> new SapLogBlock(STRIPPED_PECAN_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PECAN_WOOD 				= HELPER.createBlock("pecan_wood", () -> new SapWoodBlock(STRIPPED_PECAN_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PECAN_PLANKS 				= HELPER.createBlock("pecan_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PECAN_SLAB 				= HELPER.createBlock("pecan_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PECAN_STAIRS 				= HELPER.createBlock("pecan_stairs", () -> new SapWoodStairsBlock(PECAN_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PECAN_FENCE 				= HELPER.createBlock("pecan_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> PECAN_FENCE_GATE 			= HELPER.createBlock("pecan_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PECAN_PRESSURE_PLATE 		= HELPER.createBlock("pecan_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PECAN_DOOR 				= HELPER.createBlock("pecan_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PECAN_TRAPDOOR 			= HELPER.createBlock("pecan_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PECAN_SAPLING 			= HELPER.createBlock("pecan_sapling", () -> new AbnormalsSaplingBlock(new PecanTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_PECAN_SAPLING 		= HELPER.createBlockNoItem("potted_pecan_sapling", () -> new FlowerPotBlock(SapBlocks.PECAN_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> PECAN_BUTTON 				= HELPER.createBlock("pecan_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PECAN_LEAVES 				= HELPER.createBlock("pecan_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> PECAN_SIGNS = HELPER.createSignBlock("pecan", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_PINE_LOG 		= HELPER.createBlock("stripped_pine_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_PINE_WOOD 		= HELPER.createBlock("stripped_pine_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PINE_LOG					= HELPER.createBlock("pine_log", () -> new SapLogBlock(STRIPPED_PINE_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PINE_WOOD 				= HELPER.createBlock("pine_wood", () -> new SapWoodBlock(STRIPPED_PINE_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PINE_PLANKS 				= HELPER.createBlock("pine_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PINE_SLAB 				= HELPER.createBlock("pine_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PINE_STAIRS 				= HELPER.createBlock("pine_stairs", () -> new SapWoodStairsBlock(PINE_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PINE_FENCE 				= HELPER.createBlock("pine_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> PINE_FENCE_GATE 			= HELPER.createBlock("pine_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PINE_PRESSURE_PLATE 		= HELPER.createBlock("pine_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PINE_DOOR 				= HELPER.createBlock("pine_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PINE_TRAPDOOR 			= HELPER.createBlock("pine_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PINE_SAPLING 				= HELPER.createBlock("pine_sapling", () -> new AbnormalsSaplingBlock(new PineTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_PINE_SAPLING 		= HELPER.createBlockNoItem("potted_pine_sapling", () -> new FlowerPotBlock(SapBlocks.PINE_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> PINE_BUTTON 				= HELPER.createBlock("pine_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PINE_LEAVES 				= HELPER.createBlock("pine_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> PINE_SIGNS = HELPER.createSignBlock("pine", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_PLUM_LOG 		= HELPER.createBlock("stripped_plum_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_PLUM_WOOD 		= HELPER.createBlock("stripped_plum_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PLUM_LOG					= HELPER.createBlock("plum_log", () -> new SapLogBlock(STRIPPED_PLUM_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PLUM_WOOD 				= HELPER.createBlock("plum_wood", () -> new SapWoodBlock(STRIPPED_PLUM_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PLUM_PLANKS 				= HELPER.createBlock("plum_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PLUM_SLAB 				= HELPER.createBlock("plum_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PLUM_STAIRS 				= HELPER.createBlock("plum_stairs", () -> new SapWoodStairsBlock(PLUM_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PLUM_FENCE 				= HELPER.createBlock("plum_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> PLUM_FENCE_GATE 			= HELPER.createBlock("plum_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PLUM_PRESSURE_PLATE 		= HELPER.createBlock("plum_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PLUM_DOOR 				= HELPER.createBlock("plum_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PLUM_TRAPDOOR 			= HELPER.createBlock("plum_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PLUM_SAPLING 				= HELPER.createBlock("plum_sapling", () -> new AbnormalsSaplingBlock(new PlumTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_PLUM_SAPLING 		= HELPER.createBlockNoItem("potted_plum_sapling", () -> new FlowerPotBlock(SapBlocks.PLUM_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> PLUM_BUTTON 				= HELPER.createBlock("plum_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> PLUM_LEAVES 				= HELPER.createBlock("plum_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> PLUM_SIGNS = HELPER.createSignBlock("plum", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_POPLAR_LOG 		= HELPER.createBlock("stripped_poplar_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_POPLAR_WOOD 		= HELPER.createBlock("stripped_poplar_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> POPLAR_LOG				= HELPER.createBlock("poplar_log", () -> new SapLogBlock(STRIPPED_POPLAR_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> POPLAR_WOOD 				= HELPER.createBlock("poplar_wood", () -> new SapWoodBlock(STRIPPED_POPLAR_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> POPLAR_PLANKS 			= HELPER.createBlock("poplar_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> POPLAR_SLAB 				= HELPER.createBlock("poplar_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> POPLAR_STAIRS 			= HELPER.createBlock("poplar_stairs", () -> new SapWoodStairsBlock(POPLAR_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> POPLAR_FENCE 				= HELPER.createBlock("poplar_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POPLAR_FENCE_GATE 		= HELPER.createBlock("poplar_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> POPLAR_PRESSURE_PLATE 	= HELPER.createBlock("poplar_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> POPLAR_DOOR 				= HELPER.createBlock("poplar_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> POPLAR_TRAPDOOR 			= HELPER.createBlock("poplar_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> POPLAR_SAPLING 			= HELPER.createBlock("poplar_sapling", () -> new AbnormalsSaplingBlock(new PoplarTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_POPLAR_SAPLING 	= HELPER.createBlockNoItem("potted_poplar_sapling", () -> new FlowerPotBlock(SapBlocks.POPLAR_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> POPLAR_BUTTON 			= HELPER.createBlock("poplar_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> POPLAR_LEAVES 			= HELPER.createBlock("poplar_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> POPLAR_SIGNS = HELPER.createSignBlock("poplar", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_REDWOOD_LOG 		= HELPER.createBlock("stripped_redwood_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_REDWOOD_WOOD 	= HELPER.createBlock("stripped_redwood_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> REDWOOD_LOG				= HELPER.createBlock("redwood_log", () -> new SapLogBlock(STRIPPED_REDWOOD_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> REDWOOD_WOOD 				= HELPER.createBlock("redwood_wood", () -> new SapWoodBlock(STRIPPED_REDWOOD_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> REDWOOD_PLANKS 			= HELPER.createBlock("redwood_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> REDWOOD_SLAB 				= HELPER.createBlock("redwood_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> REDWOOD_STAIRS 			= HELPER.createBlock("redwood_stairs", () -> new SapWoodStairsBlock(REDWOOD_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> REDWOOD_FENCE 			= HELPER.createBlock("redwood_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> REDWOOD_FENCE_GATE 		= HELPER.createBlock("redwood_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> REDWOOD_PRESSURE_PLATE 	= HELPER.createBlock("redwood_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> REDWOOD_DOOR 				= HELPER.createBlock("redwood_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> REDWOOD_TRAPDOOR 			= HELPER.createBlock("redwood_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> REDWOOD_SAPLING 			= HELPER.createBlock("redwood_sapling", () -> new AbnormalsSaplingBlock(new RedwoodTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_REDWOOD_SAPLING 	= HELPER.createBlockNoItem("potted_redwood_sapling", () -> new FlowerPotBlock(SapBlocks.REDWOOD_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> REDWOOD_BUTTON 			= HELPER.createBlock("redwood_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> REDWOOD_LEAVES 			= HELPER.createBlock("redwood_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> REDWOOD_SIGNS = HELPER.createSignBlock("redwood", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_ROSEWOOD_LOG 	= HELPER.createBlock("stripped_rosewood_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ROSEWOOD_WOOD 	= HELPER.createBlock("stripped_rosewood_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ROSEWOOD_LOG				= HELPER.createBlock("rosewood_log", () -> new SapLogBlock(STRIPPED_ROSEWOOD_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ROSEWOOD_WOOD 			= HELPER.createBlock("rosewood_wood", () -> new SapWoodBlock(STRIPPED_ROSEWOOD_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ROSEWOOD_PLANKS 			= HELPER.createBlock("rosewood_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ROSEWOOD_SLAB 			= HELPER.createBlock("rosewood_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ROSEWOOD_STAIRS 			= HELPER.createBlock("rosewood_stairs", () -> new SapWoodStairsBlock(ROSEWOOD_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ROSEWOOD_FENCE 			= HELPER.createBlock("rosewood_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> ROSEWOOD_FENCE_GATE 		= HELPER.createBlock("rosewood_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ROSEWOOD_PRESSURE_PLATE 	= HELPER.createBlock("rosewood_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ROSEWOOD_DOOR 			= HELPER.createBlock("rosewood_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ROSEWOOD_TRAPDOOR 		= HELPER.createBlock("rosewood_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ROSEWOOD_SAPLING 			= HELPER.createBlock("rosewood_sapling", () -> new AbnormalsSaplingBlock(new RosewoodTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_ROSEWOOD_SAPLING 	= HELPER.createBlockNoItem("potted_rosewood_sapling", () -> new FlowerPotBlock(SapBlocks.ROSEWOOD_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> ROSEWOOD_BUTTON 			= HELPER.createBlock("rosewood_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> ROSEWOOD_LEAVES 			= HELPER.createBlock("rosewood_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> ROSEWOOD_SIGNS = HELPER.createSignBlock("rosewood", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_SASSAFRAS_LOG 	= HELPER.createBlock("stripped_sassafras_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_SASSAFRAS_WOOD 	= HELPER.createBlock("stripped_sassafras_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> SASSAFRAS_LOG				= HELPER.createBlock("sassafras_log", () -> new SapLogBlock(STRIPPED_SASSAFRAS_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> SASSAFRAS_WOOD 			= HELPER.createBlock("sassafras_wood", () -> new SapWoodBlock(STRIPPED_SASSAFRAS_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> SASSAFRAS_PLANKS 			= HELPER.createBlock("sassafras_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> SASSAFRAS_SLAB 			= HELPER.createBlock("sassafras_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> SASSAFRAS_STAIRS 			= HELPER.createBlock("sassafras_stairs", () -> new SapWoodStairsBlock(SASSAFRAS_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> SASSAFRAS_FENCE 			= HELPER.createBlock("sassafras_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> SASSAFRAS_FENCE_GATE 		= HELPER.createBlock("sassafras_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> SASSAFRAS_PRESSURE_PLATE 	= HELPER.createBlock("sassafras_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> SASSAFRAS_DOOR 			= HELPER.createBlock("sassafras_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> SASSAFRAS_TRAPDOOR 		= HELPER.createBlock("sassafras_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> SASSAFRAS_SAPLING 		= HELPER.createBlock("sassafras_sapling", () -> new AbnormalsSaplingBlock(new SassafrasTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_SASSAFRAS_SAPLING 	= HELPER.createBlockNoItem("potted_sassafras_sapling", () -> new FlowerPotBlock(SapBlocks.SASSAFRAS_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> SASSAFRAS_BUTTON 			= HELPER.createBlock("sassafras_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> SASSAFRAS_LEAVES 			= HELPER.createBlock("sassafras_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> SASSAFRAS_SIGNS = HELPER.createSignBlock("sassafras", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_SYCAMORE_LOG 	= HELPER.createBlock("stripped_sycamore_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_SYCAMORE_WOOD 	= HELPER.createBlock("stripped_sycamore_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> SYCAMORE_LOG				= HELPER.createBlock("sycamore_log", () -> new SapLogBlock(STRIPPED_SYCAMORE_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> SYCAMORE_WOOD 			= HELPER.createBlock("sycamore_wood", () -> new SapWoodBlock(STRIPPED_SYCAMORE_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> SYCAMORE_PLANKS 			= HELPER.createBlock("sycamore_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> SYCAMORE_SLAB 			= HELPER.createBlock("sycamore_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> SYCAMORE_STAIRS 			= HELPER.createBlock("sycamore_stairs", () -> new SapWoodStairsBlock(SYCAMORE_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> SYCAMORE_FENCE 			= HELPER.createBlock("sycamore_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> SYCAMORE_FENCE_GATE 		= HELPER.createBlock("sycamore_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> SYCAMORE_PRESSURE_PLATE 	= HELPER.createBlock("sycamore_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> SYCAMORE_DOOR 			= HELPER.createBlock("sycamore_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> SYCAMORE_TRAPDOOR 		= HELPER.createBlock("sycamore_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> SYCAMORE_SAPLING 			= HELPER.createBlock("sycamore_sapling", () -> new AbnormalsSaplingBlock(new SycamoreTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_SYCAMORE_SAPLING 	= HELPER.createBlockNoItem("potted_sycamore_sapling", () -> new FlowerPotBlock(SapBlocks.SYCAMORE_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> SYCAMORE_BUTTON 			= HELPER.createBlock("sycamore_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> SYCAMORE_LEAVES 			= HELPER.createBlock("sycamore_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> SYCAMORE_SIGNS = HELPER.createSignBlock("sycamore", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_TEAK_LOG 		= HELPER.createBlock("stripped_teak_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_TEAK_WOOD 		= HELPER.createBlock("stripped_teak_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> TEAK_LOG					= HELPER.createBlock("teak_log", () -> new SapLogBlock(STRIPPED_TEAK_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> TEAK_WOOD 				= HELPER.createBlock("teak_wood", () -> new SapWoodBlock(STRIPPED_TEAK_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> TEAK_PLANKS 				= HELPER.createBlock("teak_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> TEAK_SLAB 				= HELPER.createBlock("teak_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> TEAK_STAIRS 				= HELPER.createBlock("teak_stairs", () -> new SapWoodStairsBlock(TEAK_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> TEAK_FENCE 				= HELPER.createBlock("teak_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> TEAK_FENCE_GATE 			= HELPER.createBlock("teak_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> TEAK_PRESSURE_PLATE 		= HELPER.createBlock("teak_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> TEAK_DOOR 				= HELPER.createBlock("teak_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> TEAK_TRAPDOOR 			= HELPER.createBlock("teak_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> TEAK_SAPLING 				= HELPER.createBlock("teak_sapling", () -> new AbnormalsSaplingBlock(new TeakTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_TEAK_SAPLING 		= HELPER.createBlockNoItem("potted_teak_sapling", () -> new FlowerPotBlock(SapBlocks.TEAK_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> TEAK_BUTTON 				= HELPER.createBlock("teak_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> TEAK_LEAVES 				= HELPER.createBlock("teak_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> TEAK_SIGNS = HELPER.createSignBlock("teak", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_WALNUT_LOG 		= HELPER.createBlock("stripped_walnut_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_WALNUT_WOOD 		= HELPER.createBlock("stripped_walnut_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> WALNUT_LOG				= HELPER.createBlock("walnut_log", () -> new SapLogBlock(STRIPPED_WALNUT_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> WALNUT_WOOD 				= HELPER.createBlock("walnut_wood", () -> new SapWoodBlock(STRIPPED_WALNUT_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> WALNUT_PLANKS 			= HELPER.createBlock("walnut_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> WALNUT_SLAB 				= HELPER.createBlock("walnut_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> WALNUT_STAIRS 			= HELPER.createBlock("walnut_stairs", () -> new SapWoodStairsBlock(WALNUT_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> WALNUT_FENCE 				= HELPER.createBlock("walnut_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> WALNUT_FENCE_GATE 		= HELPER.createBlock("walnut_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> WALNUT_PRESSURE_PLATE 	= HELPER.createBlock("walnut_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> WALNUT_DOOR 				= HELPER.createBlock("walnut_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> WALNUT_TRAPDOOR 			= HELPER.createBlock("walnut_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> WALNUT_SAPLING 			= HELPER.createBlock("walnut_sapling", () -> new AbnormalsSaplingBlock(new WalnutTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_WALNUT_SAPLING 	= HELPER.createBlockNoItem("potted_walnut_sapling", () -> new FlowerPotBlock(SapBlocks.WALNUT_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> WALNUT_BUTTON 			= HELPER.createBlock("walnut_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> WALNUT_LEAVES 			= HELPER.createBlock("walnut_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> WALNUT_SIGNS = HELPER.createSignBlock("walnut", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_WILLOW_LOG 		= HELPER.createBlock("stripped_willow_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_WILLOW_WOOD 		= HELPER.createBlock("stripped_willow_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> WILLOW_LOG				= HELPER.createBlock("willow_log", () -> new SapLogBlock(STRIPPED_WILLOW_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> WILLOW_WOOD 				= HELPER.createBlock("willow_wood", () -> new SapWoodBlock(STRIPPED_WILLOW_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> WILLOW_PLANKS 			= HELPER.createBlock("willow_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> WILLOW_SLAB 				= HELPER.createBlock("willow_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> WILLOW_STAIRS 			= HELPER.createBlock("willow_stairs", () -> new SapWoodStairsBlock(WILLOW_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> WILLOW_FENCE 				= HELPER.createBlock("willow_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> WILLOW_FENCE_GATE 		= HELPER.createBlock("willow_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> WILLOW_PRESSURE_PLATE 	= HELPER.createBlock("willow_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> WILLOW_DOOR 				= HELPER.createBlock("willow_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> WILLOW_TRAPDOOR 			= HELPER.createBlock("willow_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> WILLOW_SAPLING 			= HELPER.createBlock("willow_sapling", () -> new AbnormalsSaplingBlock(new WillowTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_WILLOW_SAPLING 	= HELPER.createBlockNoItem("potted_willow_sapling", () -> new FlowerPotBlock(SapBlocks.WILLOW_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> WILLOW_BUTTON 			= HELPER.createBlock("willow_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> WILLOW_LEAVES 			= HELPER.createBlock("willow_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> WILLOW_SIGNS = HELPER.createSignBlock("willow", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_YEW_LOG 			= HELPER.createBlock("stripped_yew_log", () -> new SapStrippedLogBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_YEW_WOOD 		= HELPER.createBlock("stripped_yew_wood", () -> new SapStrippedWoodBlock(SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> YEW_LOG					= HELPER.createBlock("yew_log", () -> new SapLogBlock(STRIPPED_YEW_LOG, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> YEW_WOOD 					= HELPER.createBlock("yew_wood", () -> new SapWoodBlock(STRIPPED_YEW_WOOD, SapProperties.LOG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> YEW_PLANKS 				= HELPER.createBlock("yew_planks", () -> new SapPlanksBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> YEW_SLAB 					= HELPER.createBlock("yew_slab", () -> new SapWoodSlabBlock(SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> YEW_STAIRS 				= HELPER.createBlock("yew_stairs", () -> new SapWoodStairsBlock(YEW_PLANKS.get().getDefaultState(), SapProperties.PLANKS), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> YEW_FENCE 				= HELPER.createBlock("yew_fence", () -> new SapWoodFenceBlock(SapProperties.PLANKS), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> YEW_FENCE_GATE 			= HELPER.createBlock("yew_fence_gate", () -> new SapWoodFenceGateBlock(SapProperties.PLANKS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> YEW_PRESSURE_PLATE 		= HELPER.createBlock("yew_pressure_plate", () -> new SapWoodPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, SapProperties.PRESSURE_PLATE), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> YEW_DOOR 					= HELPER.createBlock("yew_door", () -> new SapWoodDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> YEW_TRAPDOOR 				= HELPER.createBlock("yew_trapdoor", () -> new SapWoodTrapDoorBlock(SapProperties.DOORS), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> YEW_SAPLING 				= HELPER.createBlock("yew_sapling", () -> new AbnormalsSaplingBlock(new YewTree(), SapProperties.SAPLING), ItemGroup.DECORATIONS);
	public static final RegistryObject<Block> POTTED_YEW_SAPLING 		= HELPER.createBlockNoItem("potted_yew_sapling", () -> new FlowerPotBlock(SapBlocks.YEW_SAPLING.get(), SapProperties.FLOWER_POT));
	public static final RegistryObject<Block> YEW_BUTTON 				= HELPER.createBlock("yew_button", () -> new SapWoodButtonBlock(SapProperties.BUTTON), ItemGroup.REDSTONE);
	public static final RegistryObject<Block> YEW_LEAVES 				= HELPER.createBlock("yew_leaves", () -> new SapLeavesBlock(SapProperties.LEAVES, 12665871), ItemGroup.DECORATIONS);
	public static final Pair<RegistryObject<AbnormalsStandingSignBlock>, RegistryObject<AbnormalsWallSignBlock>> YEW_SIGNS = HELPER.createSignBlock("yew", MaterialColor.WOOD);

	public static final RegistryObject<Block> STRIPPED_OAK_TWIG					= HELPER.createBlock("stripped_oak_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_SPRUCE_TWIG				= HELPER.createBlock("stripped_spruce_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_BIRCH_TWIG				= HELPER.createBlock("stripped_birch_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_JUNGLE_TWIG				= HELPER.createBlock("stripped_jungle_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ACACIA_TWIG				= HELPER.createBlock("stripped_acacia_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_DARK_OAK_TWIG			= HELPER.createBlock("stripped_dark_oak_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ALDER_TWIG				= HELPER.createBlock("stripped_alder_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ALMOND_TWIG				= HELPER.createBlock("stripped_almond_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_APPLE_TWIG				= HELPER.createBlock("stripped_apple_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_APRICOT_TWIG				= HELPER.createBlock("stripped_apricot_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ASH_TWIG					= HELPER.createBlock("stripped_ash_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ASPEN_TWIG				= HELPER.createBlock("stripped_aspen_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_AVOCADO_TWIG				= HELPER.createBlock("stripped_avocado_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_BALSA_TWIG				= HELPER.createBlock("stripped_balsa_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_BAY_TWIG					= HELPER.createBlock("stripped_bay_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_BEECH_TWIG				= HELPER.createBlock("stripped_beech_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_BLACKWOOD_TWIG			= HELPER.createBlock("stripped_blackwood_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_CEDAR_TWIG				= HELPER.createBlock("stripped_cedar_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_CHERRY_TWIG				= HELPER.createBlock("stripped_cherry_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_CHESTNUT_TWIG			= HELPER.createBlock("stripped_chestnut_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_CINNAMON_TWIG			= HELPER.createBlock("stripped_cinnamon_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_CLOVE_TWIG				= HELPER.createBlock("stripped_clove_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_COTTONWOOD_TWIG			= HELPER.createBlock("stripped_cottonwood_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_CYPRESS_TWIG				= HELPER.createBlock("stripped_cypress_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ELM_TWIG					= HELPER.createBlock("stripped_elm_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_FIG_TWIG					= HELPER.createBlock("stripped_fig_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_FIR_TWIG					= HELPER.createBlock("stripped_fir_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_GINKGO_TWIG				= HELPER.createBlock("stripped_ginkgo_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_GUM_TWIG					= HELPER.createBlock("stripped_gum_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_HAWTHORN_TWIG			= HELPER.createBlock("stripped_hawthorn_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_HAZEL_TWIG				= HELPER.createBlock("stripped_hazel_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_HEMLOCK_TWIG				= HELPER.createBlock("stripped_hemlock_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_HICKORY_TWIG				= HELPER.createBlock("stripped_hickory_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_HORNBEAM_TWIG			= HELPER.createBlock("stripped_hornbeam_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_JUNIPER_TWIG				= HELPER.createBlock("stripped_juniper_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_LARCH_TWIG				= HELPER.createBlock("stripped_larch_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_LAUREL_TWIG				= HELPER.createBlock("stripped_laurel_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_LEMON_TWIG				= HELPER.createBlock("stripped_lemon_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_LIME_TWIG				= HELPER.createBlock("stripped_lime_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_LINDEN_TWIG				= HELPER.createBlock("stripped_linden_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_LOCUST_TWIG				= HELPER.createBlock("stripped_locust_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_MACADAMIA_TWIG			= HELPER.createBlock("stripped_macadamia_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_MAHOGANY_TWIG			= HELPER.createBlock("stripped_mahogany_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_MANGO_TWIG				= HELPER.createBlock("stripped_mango_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_MAPLE_TWIG				= HELPER.createBlock("stripped_maple_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_MESQUITE_TWIG			= HELPER.createBlock("stripped_mesquite_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_MULBERRY_TWIG			= HELPER.createBlock("stripped_mulberry_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_OLIVE_TWIG				= HELPER.createBlock("stripped_olive_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ORANGE_TWIG				= HELPER.createBlock("stripped_orange_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_PEACH_TWIG				= HELPER.createBlock("stripped_peach_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_PEAR_TWIG				= HELPER.createBlock("stripped_pear_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_PECAN_TWIG				= HELPER.createBlock("stripped_pecan_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_PINE_TWIG				= HELPER.createBlock("stripped_pine_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_PLUM_TWIG				= HELPER.createBlock("stripped_plum_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_POPLAR_TWIG				= HELPER.createBlock("stripped_poplar_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_REDWOOD_TWIG				= HELPER.createBlock("stripped_redwood_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ROSEWOOD_TWIG			= HELPER.createBlock("stripped_rosewood_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_SASSAFRAS_TWIG			= HELPER.createBlock("stripped_sassafras_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_SYCAMORE_TWIG			= HELPER.createBlock("stripped_sycamore_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_TEAK_TWIG				= HELPER.createBlock("stripped_teak_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_WALNUT_TWIG				= HELPER.createBlock("stripped_walnut_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_WILLOW_TWIG				= HELPER.createBlock("stripped_willow_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_YEW_TWIG					= HELPER.createBlock("stripped_yew_twig", () -> new StrippedTwigBlock(SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);


	public static final RegistryObject<Block> STRIPPED_OAK_BRANCH				= HELPER.createBlock("stripped_oak_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_SPRUCE_BRANCH			= HELPER.createBlock("stripped_spruce_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_BIRCH_BRANCH				= HELPER.createBlock("stripped_birch_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_JUNGLE_BRANCH			= HELPER.createBlock("stripped_jungle_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ACACIA_BRANCH			= HELPER.createBlock("stripped_acacia_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_DARK_OAK_BRANCH			= HELPER.createBlock("stripped_dark_oak_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ALDER_BRANCH				= HELPER.createBlock("stripped_alder_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ALMOND_BRANCH			= HELPER.createBlock("stripped_almond_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_APPLE_BRANCH				= HELPER.createBlock("stripped_apple_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_APRICOT_BRANCH			= HELPER.createBlock("stripped_apricot_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ASH_BRANCH				= HELPER.createBlock("stripped_ash_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ASPEN_BRANCH				= HELPER.createBlock("stripped_aspen_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_AVOCADO_BRANCH			= HELPER.createBlock("stripped_avocado_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_BALSA_BRANCH				= HELPER.createBlock("stripped_balsa_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_BAY_BRANCH				= HELPER.createBlock("stripped_bay_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_BEECH_BRANCH				= HELPER.createBlock("stripped_beech_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_BLACKWOOD_BRANCH			= HELPER.createBlock("stripped_blackwood_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_CEDAR_BRANCH				= HELPER.createBlock("stripped_cedar_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_CHERRY_BRANCH			= HELPER.createBlock("stripped_cherry_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_CHESTNUT_BRANCH			= HELPER.createBlock("stripped_chestnut_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_CINNAMON_BRANCH			= HELPER.createBlock("stripped_cinnamon_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_CLOVE_BRANCH				= HELPER.createBlock("stripped_clove_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_COTTONWOOD_BRANCH		= HELPER.createBlock("stripped_cottonwood_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_CYPRESS_BRANCH			= HELPER.createBlock("stripped_cypress_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ELM_BRANCH				= HELPER.createBlock("stripped_elm_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_FIG_BRANCH				= HELPER.createBlock("stripped_fig_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_FIR_BRANCH				= HELPER.createBlock("stripped_fir_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_GINKGO_BRANCH			= HELPER.createBlock("stripped_ginkgo_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_GUM_BRANCH				= HELPER.createBlock("stripped_gum_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_HAWTHORN_BRANCH			= HELPER.createBlock("stripped_hawthorn_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_HAZEL_BRANCH				= HELPER.createBlock("stripped_hazel_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_HEMLOCK_BRANCH			= HELPER.createBlock("stripped_hemlock_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_HICKORY_BRANCH			= HELPER.createBlock("stripped_hickory_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_HORNBEAM_BRANCH			= HELPER.createBlock("stripped_hornbeam_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_JUNIPER_BRANCH			= HELPER.createBlock("stripped_juniper_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_LARCH_BRANCH				= HELPER.createBlock("stripped_larch_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_LAUREL_BRANCH			= HELPER.createBlock("stripped_laurel_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_LEMON_BRANCH				= HELPER.createBlock("stripped_lemon_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_LIME_BRANCH				= HELPER.createBlock("stripped_lime_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_LINDEN_BRANCH			= HELPER.createBlock("stripped_linden_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_LOCUST_BRANCH			= HELPER.createBlock("stripped_locust_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_MACADAMIA_BRANCH			= HELPER.createBlock("stripped_macadamia_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_MAHOGANY_BRANCH			= HELPER.createBlock("stripped_mahogany_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_MANGO_BRANCH				= HELPER.createBlock("stripped_mango_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_MAPLE_BRANCH				= HELPER.createBlock("stripped_maple_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_MESQUITE_BRANCH			= HELPER.createBlock("stripped_mesquite_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_MULBERRY_BRANCH			= HELPER.createBlock("stripped_mulberry_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_OLIVE_BRANCH				= HELPER.createBlock("stripped_olive_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ORANGE_BRANCH			= HELPER.createBlock("stripped_orange_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_PEACH_BRANCH				= HELPER.createBlock("stripped_peach_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_PEAR_BRANCH				= HELPER.createBlock("stripped_pear_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_PECAN_BRANCH				= HELPER.createBlock("stripped_pecan_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_PINE_BRANCH				= HELPER.createBlock("stripped_pine_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_PLUM_BRANCH				= HELPER.createBlock("stripped_plum_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_POPLAR_BRANCH			= HELPER.createBlock("stripped_poplar_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_REDWOOD_BRANCH			= HELPER.createBlock("stripped_redwood_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_ROSEWOOD_BRANCH			= HELPER.createBlock("stripped_rosewood_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_SASSAFRAS_BRANCH			= HELPER.createBlock("stripped_sassafras_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_SYCAMORE_BRANCH			= HELPER.createBlock("stripped_sycamore_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_TEAK_BRANCH				= HELPER.createBlock("stripped_teak_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_WALNUT_BRANCH			= HELPER.createBlock("stripped_walnut_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_WILLOW_BRANCH			= HELPER.createBlock("stripped_willow_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> STRIPPED_YEW_BRANCH				= HELPER.createBlock("stripped_yew_branch", () -> new StrippedBranchBlock(SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);


	public static final RegistryObject<Block> YEW_BRANCH				= HELPER.createBlock("yew_branch", () -> new BranchBlock(STRIPPED_YEW_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> WILLOW_BRANCH				= HELPER.createBlock("willow_branch", () -> new BranchBlock(STRIPPED_WILLOW_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> WALNUT_BRANCH				= HELPER.createBlock("walnut_branch", () -> new BranchBlock(STRIPPED_WALNUT_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> TEAK_BRANCH				= HELPER.createBlock("teak_branch", () -> new BranchBlock(STRIPPED_TEAK_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> SYCAMORE_BRANCH			= HELPER.createBlock("sycamore_branch", () -> new BranchBlock(STRIPPED_SYCAMORE_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> SASSAFRAS_BRANCH			= HELPER.createBlock("sassafras_branch", () -> new BranchBlock(STRIPPED_SASSAFRAS_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ROSEWOOD_BRANCH			= HELPER.createBlock("rosewood_branch", () -> new BranchBlock(STRIPPED_ROSEWOOD_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> REDWOOD_BRANCH			= HELPER.createBlock("redwood_branch", () -> new BranchBlock(STRIPPED_REDWOOD_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> POPLAR_BRANCH				= HELPER.createBlock("poplar_branch", () -> new BranchBlock(STRIPPED_POPLAR_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PLUM_BRANCH				= HELPER.createBlock("plum_branch", () -> new BranchBlock(STRIPPED_PLUM_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PINE_BRANCH				= HELPER.createBlock("pine_branch", () -> new BranchBlock(STRIPPED_PINE_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PECAN_BRANCH				= HELPER.createBlock("pecan_branch", () -> new BranchBlock(STRIPPED_PECAN_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PEAR_BRANCH				= HELPER.createBlock("pear_branch", () -> new BranchBlock(STRIPPED_PEAR_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PEACH_BRANCH				= HELPER.createBlock("peach_branch", () -> new BranchBlock(STRIPPED_PEACH_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ORANGE_BRANCH				= HELPER.createBlock("orange_branch", () -> new BranchBlock(STRIPPED_ORANGE_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> OLIVE_BRANCH				= HELPER.createBlock("olive_branch", () -> new BranchBlock(STRIPPED_OLIVE_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MULBERRY_BRANCH			= HELPER.createBlock("mulberry_branch", () -> new BranchBlock(STRIPPED_MULBERRY_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MESQUITE_BRANCH			= HELPER.createBlock("mesquite_branch", () -> new BranchBlock(STRIPPED_MESQUITE_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MAPLE_BRANCH				= HELPER.createBlock("maple_branch", () -> new BranchBlock(STRIPPED_MAPLE_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MANGO_BRANCH				= HELPER.createBlock("mango_branch", () -> new BranchBlock(STRIPPED_MANGO_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MAHOGANY_BRANCH			= HELPER.createBlock("mahogany_branch", () -> new BranchBlock(STRIPPED_MAHOGANY_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MACADAMIA_BRANCH			= HELPER.createBlock("macadamia_branch", () -> new BranchBlock(STRIPPED_MACADAMIA_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LOCUST_BRANCH				= HELPER.createBlock("locust_branch", () -> new BranchBlock(STRIPPED_LOCUST_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LINDEN_BRANCH				= HELPER.createBlock("linden_branch", () -> new BranchBlock(STRIPPED_LINDEN_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LIME_BRANCH				= HELPER.createBlock("lime_branch", () -> new BranchBlock(STRIPPED_LIME_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LEMON_BRANCH				= HELPER.createBlock("lemon_branch", () -> new BranchBlock(STRIPPED_LEMON_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LAUREL_BRANCH				= HELPER.createBlock("laurel_branch", () -> new BranchBlock(STRIPPED_LAUREL_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LARCH_BRANCH				= HELPER.createBlock("larch_branch", () -> new BranchBlock(STRIPPED_LARCH_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> JUNIPER_BRANCH			= HELPER.createBlock("juniper_branch", () -> new BranchBlock(STRIPPED_JUNIPER_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HORNBEAM_BRANCH			= HELPER.createBlock("hornbeam_branch", () -> new BranchBlock(STRIPPED_HORNBEAM_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HICKORY_BRANCH			= HELPER.createBlock("hickory_branch", () -> new BranchBlock(STRIPPED_HICKORY_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HEMLOCK_BRANCH			= HELPER.createBlock("hemlock_branch", () -> new BranchBlock(STRIPPED_HEMLOCK_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HAZEL_BRANCH				= HELPER.createBlock("hazel_branch", () -> new BranchBlock(STRIPPED_HAZEL_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HAWTHORN_BRANCH			= HELPER.createBlock("hawthorn_branch", () -> new BranchBlock(STRIPPED_HAWTHORN_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> GUM_BRANCH				= HELPER.createBlock("gum_branch", () -> new BranchBlock(STRIPPED_GUM_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> GINKGO_BRANCH				= HELPER.createBlock("ginkgo_branch", () -> new BranchBlock(STRIPPED_GINKGO_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> FIR_BRANCH				= HELPER.createBlock("fir_branch", () -> new BranchBlock(STRIPPED_FIR_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> FIG_BRANCH				= HELPER.createBlock("fig_branch", () -> new BranchBlock(STRIPPED_FIG_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ELM_BRANCH				= HELPER.createBlock("elm_branch", () -> new BranchBlock(STRIPPED_ELM_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CYPRESS_BRANCH			= HELPER.createBlock("cypress_branch", () -> new BranchBlock(STRIPPED_CYPRESS_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> COTTONWOOD_BRANCH			= HELPER.createBlock("cottonwood_branch", () -> new BranchBlock(STRIPPED_COTTONWOOD_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CLOVE_BRANCH				= HELPER.createBlock("clove_branch", () -> new BranchBlock(STRIPPED_CLOVE_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CINNAMON_BRANCH			= HELPER.createBlock("cinnamon_branch", () -> new BranchBlock(STRIPPED_CINNAMON_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CHESTNUT_BRANCH			= HELPER.createBlock("chestnut_branch", () -> new BranchBlock(STRIPPED_CHESTNUT_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CHERRY_BRANCH				= HELPER.createBlock("cherry_branch", () -> new BranchBlock(STRIPPED_CHERRY_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CEDAR_BRANCH				= HELPER.createBlock("cedar_branch", () -> new BranchBlock(STRIPPED_CEDAR_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BLACKWOOD_BRANCH			= HELPER.createBlock("blackwood_branch", () -> new BranchBlock(STRIPPED_BLACKWOOD_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BEECH_BRANCH				= HELPER.createBlock("beech_branch", () -> new BranchBlock(STRIPPED_BEECH_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BAY_BRANCH				= HELPER.createBlock("bay_branch", () -> new BranchBlock(STRIPPED_BAY_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BALSA_BRANCH				= HELPER.createBlock("balsa_branch", () -> new BranchBlock(STRIPPED_BALSA_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> AVOCADO_BRANCH			= HELPER.createBlock("avocado_branch", () -> new BranchBlock(STRIPPED_AVOCADO_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ASPEN_BRANCH				= HELPER.createBlock("aspen_branch", () -> new BranchBlock(STRIPPED_ASPEN_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ASH_BRANCH				= HELPER.createBlock("ash_branch", () -> new BranchBlock(STRIPPED_ASH_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> APRICOT_BRANCH			= HELPER.createBlock("apricot_branch", () -> new BranchBlock(STRIPPED_APRICOT_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> APPLE_BRANCH				= HELPER.createBlock("apple_branch", () -> new BranchBlock(STRIPPED_APPLE_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ALMOND_BRANCH				= HELPER.createBlock("almond_branch", () -> new BranchBlock(STRIPPED_ALMOND_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ALDER_BRANCH				= HELPER.createBlock("alder_branch", () -> new BranchBlock(STRIPPED_ALDER_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> DARK_OAK_BRANCH			= HELPER.createBlock("dark_oak_branch", () -> new BranchBlock(STRIPPED_DARK_OAK_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ACACIA_BRANCH				= HELPER.createBlock("acacia_branch", () -> new BranchBlock(STRIPPED_ACACIA_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> JUNGLE_BRANCH				= HELPER.createBlock("jungle_branch", () -> new BranchBlock(STRIPPED_JUNGLE_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BIRCH_BRANCH				= HELPER.createBlock("birch_branch", () -> new BranchBlock(STRIPPED_BIRCH_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> SPRUCE_BRANCH				= HELPER.createBlock("spruce_branch", () -> new BranchBlock(STRIPPED_SPRUCE_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> OAK_BRANCH				= HELPER.createBlock("oak_branch", () -> new BranchBlock(STRIPPED_OAK_BRANCH, SapProperties.BRANCH), ItemGroup.BUILDING_BLOCKS);


	public static final RegistryObject<Block> YEW_TWIG					= HELPER.createBlock("yew_twig", () -> new TwigBlock(STRIPPED_YEW_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> WILLOW_TWIG				= HELPER.createBlock("willow_twig", () -> new TwigBlock(STRIPPED_WILLOW_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> WALNUT_TWIG				= HELPER.createBlock("walnut_twig", () -> new TwigBlock(STRIPPED_WALNUT_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> TEAK_TWIG					= HELPER.createBlock("teak_twig", () -> new TwigBlock(STRIPPED_TEAK_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> SYCAMORE_TWIG				= HELPER.createBlock("sycamore_twig", () -> new TwigBlock(STRIPPED_SYCAMORE_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> SASSAFRAS_TWIG			= HELPER.createBlock("sassafras_twig", () -> new TwigBlock(STRIPPED_SASSAFRAS_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ROSEWOOD_TWIG				= HELPER.createBlock("rosewood_twig", () -> new TwigBlock(STRIPPED_ROSEWOOD_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> REDWOOD_TWIG				= HELPER.createBlock("redwood_twig", () -> new TwigBlock(STRIPPED_REDWOOD_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> POPLAR_TWIG				= HELPER.createBlock("poplar_twig", () -> new TwigBlock(STRIPPED_POPLAR_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PLUM_TWIG					= HELPER.createBlock("plum_twig", () -> new TwigBlock(STRIPPED_PLUM_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PINE_TWIG					= HELPER.createBlock("pine_twig", () -> new TwigBlock(STRIPPED_PINE_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PECAN_TWIG				= HELPER.createBlock("pecan_twig", () -> new TwigBlock(STRIPPED_PECAN_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PEAR_TWIG					= HELPER.createBlock("pear_twig", () -> new TwigBlock(STRIPPED_PEAR_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> PEACH_TWIG				= HELPER.createBlock("peach_twig", () -> new TwigBlock(STRIPPED_PEACH_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ORANGE_TWIG				= HELPER.createBlock("orange_twig", () -> new TwigBlock(STRIPPED_ORANGE_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> OLIVE_TWIG				= HELPER.createBlock("olive_twig", () -> new TwigBlock(STRIPPED_OLIVE_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MULBERRY_TWIG				= HELPER.createBlock("mulberry_twig", () -> new TwigBlock(STRIPPED_MULBERRY_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MESQUITE_TWIG				= HELPER.createBlock("mesquite_twig", () -> new TwigBlock(STRIPPED_MESQUITE_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MAPLE_TWIG				= HELPER.createBlock("maple_twig", () -> new TwigBlock(STRIPPED_MAPLE_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MANGO_TWIG				= HELPER.createBlock("mango_twig", () -> new TwigBlock(STRIPPED_MANGO_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MAHOGANY_TWIG				= HELPER.createBlock("mahogany_twig", () -> new TwigBlock(STRIPPED_MAHOGANY_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> MACADAMIA_TWIG			= HELPER.createBlock("macadamia_twig", () -> new TwigBlock(STRIPPED_MACADAMIA_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LOCUST_TWIG				= HELPER.createBlock("locust_twig", () -> new TwigBlock(STRIPPED_LOCUST_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LINDEN_TWIG				= HELPER.createBlock("linden_twig", () -> new TwigBlock(STRIPPED_LINDEN_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LIME_TWIG					= HELPER.createBlock("lime_twig", () -> new TwigBlock(STRIPPED_LIME_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LEMON_TWIG				= HELPER.createBlock("lemon_twig", () -> new TwigBlock(STRIPPED_LEMON_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LAUREL_TWIG				= HELPER.createBlock("laurel_twig", () -> new TwigBlock(STRIPPED_LAUREL_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> LARCH_TWIG				= HELPER.createBlock("larch_twig", () -> new TwigBlock(STRIPPED_LARCH_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> JUNIPER_TWIG				= HELPER.createBlock("juniper_twig", () -> new TwigBlock(STRIPPED_JUNIPER_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HORNBEAM_TWIG				= HELPER.createBlock("hornbeam_twig", () -> new TwigBlock(STRIPPED_HORNBEAM_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HICKORY_TWIG				= HELPER.createBlock("hickory_twig", () -> new TwigBlock(STRIPPED_HICKORY_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HEMLOCK_TWIG				= HELPER.createBlock("hemlock_twig", () -> new TwigBlock(STRIPPED_HEMLOCK_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HAZEL_TWIG				= HELPER.createBlock("hazel_twig", () -> new TwigBlock(STRIPPED_HAZEL_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> HAWTHORN_TWIG				= HELPER.createBlock("hawthorn_twig", () -> new TwigBlock(STRIPPED_HAWTHORN_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> GUM_TWIG					= HELPER.createBlock("gum_twig", () -> new TwigBlock(STRIPPED_GUM_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> GINKGO_TWIG				= HELPER.createBlock("ginkgo_twig", () -> new TwigBlock(STRIPPED_GINKGO_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> FIR_TWIG					= HELPER.createBlock("fir_twig", () -> new TwigBlock(STRIPPED_FIR_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> FIG_TWIG					= HELPER.createBlock("fig_twig", () -> new TwigBlock(STRIPPED_FIG_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ELM_TWIG					= HELPER.createBlock("elm_twig", () -> new TwigBlock(STRIPPED_ELM_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CYPRESS_TWIG				= HELPER.createBlock("cypress_twig", () -> new TwigBlock(STRIPPED_CYPRESS_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> COTTONWOOD_TWIG			= HELPER.createBlock("cottonwood_twig", () -> new TwigBlock(STRIPPED_COTTONWOOD_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CLOVE_TWIG				= HELPER.createBlock("clove_twig", () -> new TwigBlock(STRIPPED_CLOVE_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CINNAMON_TWIG				= HELPER.createBlock("cinnamon_twig", () -> new TwigBlock(STRIPPED_CINNAMON_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CHESTNUT_TWIG				= HELPER.createBlock("chestnut_twig", () -> new TwigBlock(STRIPPED_CHESTNUT_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CHERRY_TWIG				= HELPER.createBlock("cherry_twig", () -> new TwigBlock(STRIPPED_CHERRY_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> CEDAR_TWIG				= HELPER.createBlock("cedar_twig", () -> new TwigBlock(STRIPPED_CEDAR_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BLACKWOOD_TWIG			= HELPER.createBlock("blackwood_twig", () -> new TwigBlock(STRIPPED_BLACKWOOD_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BEECH_TWIG				= HELPER.createBlock("beech_twig", () -> new TwigBlock(STRIPPED_BEECH_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BAY_TWIG					= HELPER.createBlock("bay_twig", () -> new TwigBlock(STRIPPED_BAY_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BALSA_TWIG				= HELPER.createBlock("balsa_twig", () -> new TwigBlock(STRIPPED_BALSA_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> AVOCADO_TWIG				= HELPER.createBlock("avocado_twig", () -> new TwigBlock(STRIPPED_AVOCADO_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ASPEN_TWIG				= HELPER.createBlock("aspen_twig", () -> new TwigBlock(STRIPPED_ASPEN_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ASH_TWIG					= HELPER.createBlock("ash_twig", () -> new TwigBlock(STRIPPED_ASH_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> APRICOT_TWIG				= HELPER.createBlock("apricot_twig", () -> new TwigBlock(STRIPPED_APRICOT_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> APPLE_TWIG				= HELPER.createBlock("apple_twig", () -> new TwigBlock(STRIPPED_APPLE_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ALMOND_TWIG				= HELPER.createBlock("almond_twig", () -> new TwigBlock(STRIPPED_ALMOND_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ALDER_TWIG				= HELPER.createBlock("alder_twig", () -> new TwigBlock(STRIPPED_ALDER_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> DARK_OAK_TWIG				= HELPER.createBlock("dark_oak_twig", () -> new TwigBlock(STRIPPED_DARK_OAK_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> ACACIA_TWIG				= HELPER.createBlock("acacia_twig", () -> new TwigBlock(STRIPPED_ACACIA_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> JUNGLE_TWIG				= HELPER.createBlock("jungle_twig", () -> new TwigBlock(STRIPPED_JUNGLE_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> BIRCH_TWIG				= HELPER.createBlock("birch_twig", () -> new TwigBlock(STRIPPED_BIRCH_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> SPRUCE_TWIG				= HELPER.createBlock("spruce_twig", () -> new TwigBlock(STRIPPED_SPRUCE_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);
	public static final RegistryObject<Block> OAK_TWIG					= HELPER.createBlock("oak_twig", () -> new TwigBlock(STRIPPED_OAK_TWIG, SapProperties.TWIG), ItemGroup.BUILDING_BLOCKS);

}
